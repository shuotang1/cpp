<?xml version="1.0" encoding="UTF-8"?>
<results version="2">
    <cppcheck version="2.12.0"/>
    <errors>
Checking D:\hust-2025-cpp-task\ayiziba\week02\homework\main.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector &lt; int , std :: allocator &lt; int &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector &lt; int , std :: allocator &lt; int &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/ayiziba/week02/homework/main.cpp">
            <location file="D:\hust-2025-cpp-task\ayiziba\week02\homework\KVector.h" line="58" column="5"/>
            <symbol>KVector &lt; int , std :: allocator &lt; int &gt; &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVectorIterator &lt; int , std :: allocator &lt; int &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVectorIterator &lt; int , std :: allocator &lt; int &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/ayiziba/week02/homework/main.cpp">
            <location file="D:\hust-2025-cpp-task\ayiziba\week02\homework\KVector.h" line="16" column="5"/>
            <symbol>KVectorIterator &lt; int , std :: allocator &lt; int &gt; &gt;</symbol>
        </error>
        <error id="accessMoved" severity="warning" msg="Access of moved variable &apos;:&apos;." verbose="Access of moved variable &apos;:&apos;." cwe="672" file0="D:/hust-2025-cpp-task/ayiziba/week02/homework/main.cpp">
            <location file="D:\hust-2025-cpp-task\ayiziba\week02\homework\main.cpp" line="30" column="30" info="Access of moved variable &apos;:&apos;."/>
            <location file="D:\hust-2025-cpp-task\ayiziba\week02\homework\main.cpp" line="27" column="23" info="Calling std::move(vec1)"/>
            <symbol>:</symbol>
        </error>
        <error id="accessMoved" severity="warning" msg="Access of moved variable &apos;vec1&apos;." verbose="Access of moved variable &apos;vec1&apos;." cwe="672" file0="D:/hust-2025-cpp-task/ayiziba/week02/homework/main.cpp">
            <location file="D:\hust-2025-cpp-task\ayiziba\week02\homework\main.cpp" line="30" column="32" info="Access of moved variable &apos;vec1&apos;."/>
            <location file="D:\hust-2025-cpp-task\ayiziba\week02\homework\main.cpp" line="27" column="23" info="Calling std::move(vec1)"/>
            <symbol>vec1</symbol>
        </error>
        <error id="accessMoved" severity="warning" msg="Access of moved variable &apos;:&apos;." verbose="Access of moved variable &apos;:&apos;." cwe="672" file0="D:/hust-2025-cpp-task/ayiziba/week02/homework/main.cpp">
            <location file="D:\hust-2025-cpp-task\ayiziba\week02\homework\main.cpp" line="46" column="30" info="Access of moved variable &apos;:&apos;."/>
            <location file="D:\hust-2025-cpp-task\ayiziba\week02\homework\main.cpp" line="43" column="12" info="Calling std::move(vec4)"/>
            <symbol>:</symbol>
        </error>
        <error id="accessMoved" severity="warning" msg="Access of moved variable &apos;vec4&apos;." verbose="Access of moved variable &apos;vec4&apos;." cwe="672" file0="D:/hust-2025-cpp-task/ayiziba/week02/homework/main.cpp">
            <location file="D:\hust-2025-cpp-task\ayiziba\week02\homework\main.cpp" line="46" column="32" info="Access of moved variable &apos;vec4&apos;."/>
            <location file="D:\hust-2025-cpp-task\ayiziba\week02\homework\main.cpp" line="43" column="12" info="Calling std::move(vec4)"/>
            <symbol>vec4</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;value&apos; is assigned a value that is never used." verbose="Variable &apos;value&apos; is assigned a value that is never used." cwe="563" file0="D:/hust-2025-cpp-task/ayiziba/week02/homework/main.cpp">
            <location file="D:\hust-2025-cpp-task\ayiziba\week02\homework\main.cpp" line="63" column="13"/>
            <symbol>value</symbol>
        </error>
1/88 files checked 0% done
Checking D:\hust-2025-cpp-task\caiyuanhao\week02\homework\KVector.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;KVector&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;KVector&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/caiyuanhao/week02/homework/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\caiyuanhao\week02\homework\KVector.cpp" line="10" column="2"/>
            <symbol>KVector</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/caiyuanhao/week02/homework/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\caiyuanhao\week02\homework\KVector.h" line="15" column="2"/>
            <symbol>KVector</symbol>
        </error>
2/88 files checked 0% done
Checking D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Kvector_new\Kvector_new\test5.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Kvector &lt; int &gt;::last_addr&apos; is not initialized in the constructor." verbose="Member variable &apos;Kvector &lt; int &gt;::last_addr&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Kvector_new/Kvector_new/test5.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Kvector_new\Kvector_new\Kvector_ptr.h" line="35" column="2"/>
            <symbol>Kvector &lt; int &gt;::last_addr</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Kvector &lt; int &gt;::end_of_capacity&apos; is not initialized in the constructor." verbose="Member variable &apos;Kvector &lt; int &gt;::end_of_capacity&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Kvector_new/Kvector_new/test5.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Kvector_new\Kvector_new\Kvector_ptr.h" line="35" column="2"/>
            <symbol>Kvector &lt; int &gt;::end_of_capacity</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Kvector &lt; int &gt;::_size&apos; is not initialized in the constructor." verbose="Member variable &apos;Kvector &lt; int &gt;::_size&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Kvector_new/Kvector_new/test5.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Kvector_new\Kvector_new\Kvector_ptr.h" line="35" column="2"/>
            <symbol>Kvector &lt; int &gt;::_size</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Kvector &lt; int &gt;::_capacity&apos; is not initialized in the constructor." verbose="Member variable &apos;Kvector &lt; int &gt;::_capacity&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Kvector_new/Kvector_new/test5.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Kvector_new\Kvector_new\Kvector_ptr.h" line="35" column="2"/>
            <symbol>Kvector &lt; int &gt;::_capacity</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Kvector &lt; int &gt;::last_addr&apos; is not initialized in the constructor." verbose="Member variable &apos;Kvector &lt; int &gt;::last_addr&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Kvector_new/Kvector_new/test5.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Kvector_new\Kvector_new\Kvector_ptr.h" line="45" column="2"/>
            <symbol>Kvector &lt; int &gt;::last_addr</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Kvector &lt; int &gt;::end_of_capacity&apos; is not initialized in the constructor." verbose="Member variable &apos;Kvector &lt; int &gt;::end_of_capacity&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Kvector_new/Kvector_new/test5.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Kvector_new\Kvector_new\Kvector_ptr.h" line="45" column="2"/>
            <symbol>Kvector &lt; int &gt;::end_of_capacity</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;Kvector &lt; int &gt;::_capacity&apos; is not initialized in the constructor." verbose="Member variable &apos;Kvector &lt; int &gt;::_capacity&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Kvector_new/Kvector_new/test5.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Kvector_new\Kvector_new\Kvector_ptr.h" line="45" column="2"/>
            <symbol>Kvector &lt; int &gt;::_capacity</symbol>
        </error>
        <error id="operatorEqVarError" severity="warning" msg="Member variable &apos;Kvector &lt; int &gt;::last_addr&apos; is not assigned a value in &apos;Kvector &lt; int &gt;::operator=&apos;." verbose="Member variable &apos;Kvector &lt; int &gt;::last_addr&apos; is not assigned a value in &apos;Kvector &lt; int &gt;::operator=&apos;." cwe="398" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Kvector_new/Kvector_new/test5.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Kvector_new\Kvector_new\Kvector_ptr.h" line="110" column="10"/>
            <symbol>Kvector &lt; int &gt;::last_addr</symbol>
        </error>
        <error id="operatorEqVarError" severity="warning" msg="Member variable &apos;Kvector &lt; int &gt;::end_of_capacity&apos; is not assigned a value in &apos;Kvector &lt; int &gt;::operator=&apos;." verbose="Member variable &apos;Kvector &lt; int &gt;::end_of_capacity&apos; is not assigned a value in &apos;Kvector &lt; int &gt;::operator=&apos;." cwe="398" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Kvector_new/Kvector_new/test5.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Kvector_new\Kvector_new\Kvector_ptr.h" line="110" column="10"/>
            <symbol>Kvector &lt; int &gt;::end_of_capacity</symbol>
        </error>
        <error id="operatorEqVarError" severity="warning" msg="Member variable &apos;Kvector &lt; int &gt;::_size&apos; is not assigned a value in &apos;Kvector &lt; int &gt;::operator=&apos;." verbose="Member variable &apos;Kvector &lt; int &gt;::_size&apos; is not assigned a value in &apos;Kvector &lt; int &gt;::operator=&apos;." cwe="398" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Kvector_new/Kvector_new/test5.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Kvector_new\Kvector_new\Kvector_ptr.h" line="110" column="10"/>
            <symbol>Kvector &lt; int &gt;::_size</symbol>
        </error>
        <error id="operatorEqVarError" severity="warning" msg="Member variable &apos;Kvector &lt; int &gt;::_capacity&apos; is not assigned a value in &apos;Kvector &lt; int &gt;::operator=&apos;." verbose="Member variable &apos;Kvector &lt; int &gt;::_capacity&apos; is not assigned a value in &apos;Kvector &lt; int &gt;::operator=&apos;." cwe="398" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Kvector_new/Kvector_new/test5.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Kvector_new\Kvector_new\Kvector_ptr.h" line="110" column="10"/>
            <symbol>Kvector &lt; int &gt;::_capacity</symbol>
        </error>
        <error id="operatorEqVarError" severity="warning" msg="Member variable &apos;Kvector &lt; int &gt;::last_addr&apos; is not assigned a value in &apos;Kvector &lt; int &gt;::operator=&apos;." verbose="Member variable &apos;Kvector &lt; int &gt;::last_addr&apos; is not assigned a value in &apos;Kvector &lt; int &gt;::operator=&apos;." cwe="398" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Kvector_new/Kvector_new/test5.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Kvector_new\Kvector_new\Kvector_ptr.h" line="117" column="10"/>
            <symbol>Kvector &lt; int &gt;::last_addr</symbol>
        </error>
        <error id="operatorEqVarError" severity="warning" msg="Member variable &apos;Kvector &lt; int &gt;::end_of_capacity&apos; is not assigned a value in &apos;Kvector &lt; int &gt;::operator=&apos;." verbose="Member variable &apos;Kvector &lt; int &gt;::end_of_capacity&apos; is not assigned a value in &apos;Kvector &lt; int &gt;::operator=&apos;." cwe="398" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Kvector_new/Kvector_new/test5.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Kvector_new\Kvector_new\Kvector_ptr.h" line="117" column="10"/>
            <symbol>Kvector &lt; int &gt;::end_of_capacity</symbol>
        </error>
        <error id="operatorEqVarError" severity="warning" msg="Member variable &apos;Kvector &lt; int &gt;::_size&apos; is not assigned a value in &apos;Kvector &lt; int &gt;::operator=&apos;." verbose="Member variable &apos;Kvector &lt; int &gt;::_size&apos; is not assigned a value in &apos;Kvector &lt; int &gt;::operator=&apos;." cwe="398" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Kvector_new/Kvector_new/test5.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Kvector_new\Kvector_new\Kvector_ptr.h" line="117" column="10"/>
            <symbol>Kvector &lt; int &gt;::_size</symbol>
        </error>
        <error id="operatorEqVarError" severity="warning" msg="Member variable &apos;Kvector &lt; int &gt;::_capacity&apos; is not assigned a value in &apos;Kvector &lt; int &gt;::operator=&apos;." verbose="Member variable &apos;Kvector &lt; int &gt;::_capacity&apos; is not assigned a value in &apos;Kvector &lt; int &gt;::operator=&apos;." cwe="398" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Kvector_new/Kvector_new/test5.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Kvector_new\Kvector_new\Kvector_ptr.h" line="117" column="10"/>
            <symbol>Kvector &lt; int &gt;::_capacity</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;first_addr&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;first_addr&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Kvector_new/Kvector_new/test5.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Kvector_new\Kvector_new\Kvector_ptr.h" line="41" column="3"/>
            <symbol>first_addr</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;first_addr_test&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;first_addr_test&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Kvector_new/Kvector_new/test5.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Kvector_new\Kvector_new\Kvector_ptr.h" line="59" column="3"/>
            <symbol>first_addr_test</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;first_addr&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;first_addr&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Kvector_new/Kvector_new/test5.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Kvector_new\Kvector_new\Kvector_ptr.h" line="82" column="3"/>
            <symbol>first_addr</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;first_addr&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;first_addr&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Kvector_new/Kvector_new/test5.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Kvector_new\Kvector_new\Kvector_ptr.h" line="89" column="3"/>
            <symbol>first_addr</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;first_addr&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;first_addr&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Kvector_new/Kvector_new/test5.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Kvector_new\Kvector_new\Kvector_ptr.h" line="95" column="3"/>
            <symbol>first_addr</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;Kvector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;Kvector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Kvector_new/Kvector_new/test5.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Kvector_new\Kvector_new\Kvector_ptr.h" line="39" column="2"/>
            <symbol>Kvector &lt; int &gt;</symbol>
        </error>
        <error id="invalidPrintfArgType_uint" severity="warning" msg="%x in format string (no. 1) requires &apos;unsigned int&apos; but the argument type is &apos;std::shared_ptr&apos;." verbose="%x in format string (no. 1) requires &apos;unsigned int&apos; but the argument type is &apos;std::shared_ptr&apos;." cwe="686" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Kvector_new/Kvector_new/test5.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Kvector_new\Kvector_new\Kvector_ptr.h" line="381" column="4"/>
        </error>
        <error id="invalidPrintfArgType_uint" severity="warning" msg="%x in format string (no. 2) requires &apos;unsigned int&apos; but the argument type is &apos;signed int *&apos;." verbose="%x in format string (no. 2) requires &apos;unsigned int&apos; but the argument type is &apos;signed int *&apos;." cwe="686" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Kvector_new/Kvector_new/test5.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Kvector_new\Kvector_new\Kvector_ptr.h" line="381" column="4"/>
        </error>
        <error id="invalidPrintfArgType_uint" severity="warning" msg="%x in format string (no. 3) requires &apos;unsigned int&apos; but the argument type is &apos;signed int *&apos;." verbose="%x in format string (no. 3) requires &apos;unsigned int&apos; but the argument type is &apos;signed int *&apos;." cwe="686" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Kvector_new/Kvector_new/test5.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Kvector_new\Kvector_new\Kvector_ptr.h" line="381" column="4"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 4) requires &apos;int&apos; but the argument type is &apos;unsigned long long&apos;." verbose="%d in format string (no. 4) requires &apos;int&apos; but the argument type is &apos;unsigned long long&apos;." cwe="686" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Kvector_new/Kvector_new/test5.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Kvector_new\Kvector_new\Kvector_ptr.h" line="381" column="4"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 5) requires &apos;int&apos; but the argument type is &apos;unsigned long long&apos;." verbose="%d in format string (no. 5) requires &apos;int&apos; but the argument type is &apos;unsigned long long&apos;." cwe="686" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Kvector_new/Kvector_new/test5.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Kvector_new\Kvector_new\Kvector_ptr.h" line="381" column="4"/>
        </error>
3/88 files checked 0% done
Checking D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Week2_Prj\test1.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;Kvector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;Kvector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Week2_Prj/test1.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Week2_Prj\Kvector.h" line="38" column="2"/>
            <symbol>Kvector &lt; int &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;Kvector &lt; string &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;Kvector &lt; string &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Week2_Prj/test1.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Week2_Prj\Kvector.h" line="38" column="2"/>
            <symbol>Kvector &lt; string &gt;</symbol>
        </error>
        <error id="invalidPrintfArgType_uint" severity="warning" msg="%x in format string (no. 1) requires &apos;unsigned int&apos; but the argument type is &apos;signed int *&apos;." verbose="%x in format string (no. 1) requires &apos;unsigned int&apos; but the argument type is &apos;signed int *&apos;." cwe="686" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Week2_Prj/test1.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Week2_Prj\Kvector.h" line="352" column="4"/>
        </error>
        <error id="invalidPrintfArgType_uint" severity="warning" msg="%x in format string (no. 2) requires &apos;unsigned int&apos; but the argument type is &apos;signed int *&apos;." verbose="%x in format string (no. 2) requires &apos;unsigned int&apos; but the argument type is &apos;signed int *&apos;." cwe="686" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Week2_Prj/test1.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Week2_Prj\Kvector.h" line="352" column="4"/>
        </error>
        <error id="invalidPrintfArgType_uint" severity="warning" msg="%x in format string (no. 3) requires &apos;unsigned int&apos; but the argument type is &apos;signed int *&apos;." verbose="%x in format string (no. 3) requires &apos;unsigned int&apos; but the argument type is &apos;signed int *&apos;." cwe="686" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Week2_Prj/test1.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Week2_Prj\Kvector.h" line="352" column="4"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 4) requires &apos;int&apos; but the argument type is &apos;unsigned long long&apos;." verbose="%d in format string (no. 4) requires &apos;int&apos; but the argument type is &apos;unsigned long long&apos;." cwe="686" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Week2_Prj/test1.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Week2_Prj\Kvector.h" line="352" column="4"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 5) requires &apos;int&apos; but the argument type is &apos;unsigned long long&apos;." verbose="%d in format string (no. 5) requires &apos;int&apos; but the argument type is &apos;unsigned long long&apos;." cwe="686" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Week2_Prj/test1.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Week2_Prj\Kvector.h" line="352" column="4"/>
        </error>
        <error id="invalidPrintfArgType_uint" severity="warning" msg="%x in format string (no. 1) requires &apos;unsigned int&apos; but the argument type is &apos;std::string *&apos;." verbose="%x in format string (no. 1) requires &apos;unsigned int&apos; but the argument type is &apos;std::string *&apos;." cwe="686" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Week2_Prj/test1.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Week2_Prj\Kvector.h" line="352" column="4"/>
        </error>
        <error id="invalidPrintfArgType_uint" severity="warning" msg="%x in format string (no. 2) requires &apos;unsigned int&apos; but the argument type is &apos;std::string *&apos;." verbose="%x in format string (no. 2) requires &apos;unsigned int&apos; but the argument type is &apos;std::string *&apos;." cwe="686" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Week2_Prj/test1.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Week2_Prj\Kvector.h" line="352" column="4"/>
        </error>
        <error id="invalidPrintfArgType_uint" severity="warning" msg="%x in format string (no. 3) requires &apos;unsigned int&apos; but the argument type is &apos;std::string *&apos;." verbose="%x in format string (no. 3) requires &apos;unsigned int&apos; but the argument type is &apos;std::string *&apos;." cwe="686" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Week2_Prj/test1.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Week2_Prj\Kvector.h" line="352" column="4"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;t_init&apos; should be passed by const reference." verbose="Parameter &apos;t_init&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Week2_Prj/test1.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Week2_Prj\Kvector.h" line="43" column="28"/>
            <symbol>t_init</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;t&apos; should be passed by const reference." verbose="Parameter &apos;t&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Week2_Prj/test1.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Week2_Prj\Kvector.h" line="128" column="25"/>
            <symbol>t</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;t&apos; should be passed by const reference." verbose="Parameter &apos;t&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Week2_Prj/test1.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Week2_Prj\Kvector.h" line="249" column="28"/>
            <symbol>t</symbol>
        </error>
        <error id="constParameterReference" severity="style" msg="Parameter &apos;K&apos; can be declared as reference to const" verbose="Parameter &apos;K&apos; can be declared as reference to const" cwe="398" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Week2_Prj/test1.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Week2_Prj\Kvector.h" line="49" column="19" info="Parameter &apos;K&apos; can be declared as reference to const"/>
            <symbol>K</symbol>
        </error>
4/88 files checked 0% done
Checking D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Week2_Prj\test2.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;Kvector &lt; char &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;Kvector &lt; char &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Week2_Prj/test2.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Week2_Prj\Kvector.h" line="38" column="2"/>
            <symbol>Kvector &lt; char &gt;</symbol>
        </error>
        <error id="invalidPrintfArgType_uint" severity="warning" msg="%x in format string (no. 1) requires &apos;unsigned int&apos; but the argument type is &apos;char *&apos;." verbose="%x in format string (no. 1) requires &apos;unsigned int&apos; but the argument type is &apos;char *&apos;." cwe="686" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Week2_Prj/test2.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Week2_Prj\Kvector.h" line="352" column="4"/>
        </error>
        <error id="invalidPrintfArgType_uint" severity="warning" msg="%x in format string (no. 2) requires &apos;unsigned int&apos; but the argument type is &apos;char *&apos;." verbose="%x in format string (no. 2) requires &apos;unsigned int&apos; but the argument type is &apos;char *&apos;." cwe="686" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Week2_Prj/test2.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Week2_Prj\Kvector.h" line="352" column="4"/>
        </error>
        <error id="invalidPrintfArgType_uint" severity="warning" msg="%x in format string (no. 3) requires &apos;unsigned int&apos; but the argument type is &apos;char *&apos;." verbose="%x in format string (no. 3) requires &apos;unsigned int&apos; but the argument type is &apos;char *&apos;." cwe="686" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Week2_Prj/test2.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Week2_Prj\Kvector.h" line="352" column="4"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::copy algorithm instead of a raw loop." verbose="Consider using std::copy algorithm instead of a raw loop." cwe="398" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Week2_Prj/test2.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Week2_Prj\test2.cpp" line="11" column="30"/>
        </error>
5/88 files checked 1% done
Checking D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Week2_Prj\test3.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;Kvector &lt; double &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;Kvector &lt; double &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Week2_Prj/test3.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Week2_Prj\Kvector.h" line="38" column="2"/>
            <symbol>Kvector &lt; double &gt;</symbol>
        </error>
        <error id="invalidPrintfArgType_uint" severity="warning" msg="%x in format string (no. 1) requires &apos;unsigned int&apos; but the argument type is &apos;double *&apos;." verbose="%x in format string (no. 1) requires &apos;unsigned int&apos; but the argument type is &apos;double *&apos;." cwe="686" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Week2_Prj/test3.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Week2_Prj\Kvector.h" line="352" column="4"/>
        </error>
        <error id="invalidPrintfArgType_uint" severity="warning" msg="%x in format string (no. 2) requires &apos;unsigned int&apos; but the argument type is &apos;double *&apos;." verbose="%x in format string (no. 2) requires &apos;unsigned int&apos; but the argument type is &apos;double *&apos;." cwe="686" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Week2_Prj/test3.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Week2_Prj\Kvector.h" line="352" column="4"/>
        </error>
        <error id="invalidPrintfArgType_uint" severity="warning" msg="%x in format string (no. 3) requires &apos;unsigned int&apos; but the argument type is &apos;double *&apos;." verbose="%x in format string (no. 3) requires &apos;unsigned int&apos; but the argument type is &apos;double *&apos;." cwe="686" file0="D:/hust-2025-cpp-task/cuihaoyi/week02/homework/Week2_Prj/test3.cpp">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Week2_Prj\Kvector.h" line="352" column="4"/>
        </error>
6/88 files checked 1% done
Checking D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Week2_Prj\test4.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
7/88 files checked 1% done
Checking D:\hust-2025-cpp-task\dengzihan\week02\homework\KVector.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="missingReturn" severity="error" msg="Found an exit path from function with non-void return type that has missing return statement" verbose="Found an exit path from function with non-void return type that has missing return statement" cwe="758" file0="D:/hust-2025-cpp-task/dengzihan/week02/homework/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\dengzihan\week02\homework\KVector.cpp" line="103" column="9"/>
        </error>
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;KVector &lt; int , std :: allocator &lt; int &gt; &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;KVector &lt; int , std :: allocator &lt; int &gt; &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/dengzihan/week02/homework/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\dengzihan\week02\homework\KVector.cpp" line="55" column="54"/>
            <symbol>KVector &lt; int , std :: allocator &lt; int &gt; &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVectorIterator &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVectorIterator &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/dengzihan/week02/homework/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\dengzihan\week02\homework\KVector.cpp" line="13" column="5"/>
            <symbol>KVectorIterator &lt; int &gt;</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="D:/hust-2025-cpp-task/dengzihan/week02/homework/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\dengzihan\week02\homework\KVector.cpp" line="267" column="64"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="D:/hust-2025-cpp-task/dengzihan/week02/homework/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\dengzihan\week02\homework\KVector.cpp" line="289" column="64"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="D:/hust-2025-cpp-task/dengzihan/week02/homework/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\dengzihan\week02\homework\KVector.cpp" line="312" column="48"/>
        </error>
8/88 files checked 2% done
Checking D:\hust-2025-cpp-task\fengguixin\week02\homework\MyVector类模板设计\MyVector类模板设计\main.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;KComplex::m_real&apos; is not initialized in the constructor." verbose="Member variable &apos;KComplex::m_real&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="D:/hust-2025-cpp-task/fengguixin/week02/homework/MyVector类模板设计/MyVector类模板设计/main.cpp">
            <location file="D:\hust-2025-cpp-task\fengguixin\week02\homework\MyVector类模板设计\MyVector类模板设计\mycomplex.h" line="7" column="2"/>
            <symbol>KComplex::m_real</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;KComplex::m_imag&apos; is not initialized in the constructor." verbose="Member variable &apos;KComplex::m_imag&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="D:/hust-2025-cpp-task/fengguixin/week02/homework/MyVector类模板设计/MyVector类模板设计/main.cpp">
            <location file="D:\hust-2025-cpp-task\fengguixin\week02\homework\MyVector类模板设计\MyVector类模板设计\mycomplex.h" line="7" column="2"/>
            <symbol>KComplex::m_imag</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/fengguixin/week02/homework/MyVector类模板设计/MyVector类模板设计/main.cpp">
            <location file="D:\hust-2025-cpp-task\fengguixin\week02\homework\MyVector类模板设计\MyVector类模板设计\myvector.h" line="16" column="2"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector &lt; string &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector &lt; string &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/fengguixin/week02/homework/MyVector类模板设计/MyVector类模板设计/main.cpp">
            <location file="D:\hust-2025-cpp-task\fengguixin\week02\homework\MyVector类模板设计\MyVector类模板设计\myvector.h" line="16" column="2"/>
            <symbol>KVector &lt; string &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector &lt; KComplex &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector &lt; KComplex &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/fengguixin/week02/homework/MyVector类模板设计/MyVector类模板设计/main.cpp">
            <location file="D:\hust-2025-cpp-task\fengguixin\week02\homework\MyVector类模板设计\MyVector类模板设计\myvector.h" line="16" column="2"/>
            <symbol>KVector &lt; KComplex &gt;</symbol>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;~v1.isempty()&apos; is always true" verbose="Condition &apos;~v1.isempty()&apos; is always true" cwe="571" file0="D:/hust-2025-cpp-task/fengguixin/week02/homework/MyVector类模板设计/MyVector类模板设计/main.cpp">
            <location file="D:\hust-2025-cpp-task\fengguixin\week02\homework\MyVector类模板设计\MyVector类模板设计\main.cpp" line="17" column="6" info="Condition &apos;~v1.isempty()&apos; is always true"/>
        </error>
9/88 files checked 2% done
Checking D:\hust-2025-cpp-task\fengguixin\week02\homework\MyVector类模板设计\MyVector类模板设计\mycomplex.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
10/88 files checked 2% done
Checking D:\hust-2025-cpp-task\gaoxing\week02\homework\Kvector\Kvector.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="useInitializationList" severity="performance" msg="Variable &apos;_start&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;_start&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="D:/hust-2025-cpp-task/gaoxing/week02/homework/Kvector/Kvector.cpp">
            <location file="D:\hust-2025-cpp-task\gaoxing\week02\homework\Kvector\Kvector.cpp" line="17" column="5"/>
            <symbol>_start</symbol>
        </error>
        <error id="unsignedPositive" severity="style" msg="Unsigned expression &apos;pos&apos; can&apos;t be negative so it is unnecessary to test it." verbose="Unsigned expression &apos;pos&apos; can&apos;t be negative so it is unnecessary to test it." cwe="570" file0="D:/hust-2025-cpp-task/gaoxing/week02/homework/Kvector/Kvector.cpp">
            <location file="D:\hust-2025-cpp-task\gaoxing\week02\homework\Kvector\Kvector.cpp" line="127" column="13" info="Unsigned positive"/>
            <symbol>pos</symbol>
        </error>
        <error id="shadowFunction" severity="style" msg="Local variable &apos;begin&apos; shadows outer function" verbose="Local variable &apos;begin&apos; shadows outer function" cwe="398" file0="D:/hust-2025-cpp-task/gaoxing/week02/homework/Kvector/Kvector.cpp">
            <location file="D:\hust-2025-cpp-task\gaoxing\week02\homework\Kvector\Kvector.cpp" line="128" column="18" info="Shadow variable"/>
            <location file="D:\hust-2025-cpp-task\gaoxing\week02\homework\Kvector\Kvector.h" line="40" column="14" info="Shadowed declaration"/>
            <symbol>begin</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;_start.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;_start.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="D:/hust-2025-cpp-task/gaoxing/week02/homework/Kvector/Kvector.cpp">
            <location file="D:\hust-2025-cpp-task\gaoxing\week02\homework\Kvector\Kvector.cpp" line="19" column="25"/>
            <symbol>_start.get()</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;_start.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;_start.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="D:/hust-2025-cpp-task/gaoxing/week02/homework/Kvector/Kvector.cpp">
            <location file="D:\hust-2025-cpp-task\gaoxing\week02\homework\Kvector\Kvector.cpp" line="128" column="39"/>
            <symbol>_start.get()</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;_start.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;_start.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="D:/hust-2025-cpp-task/gaoxing/week02/homework/Kvector/Kvector.cpp">
            <location file="D:\hust-2025-cpp-task\gaoxing\week02\homework\Kvector\Kvector.cpp" line="166" column="32"/>
            <symbol>_start.get()</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;_start.get()+size1&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;_start.get()+size1&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="D:/hust-2025-cpp-task/gaoxing/week02/homework/Kvector/Kvector.cpp">
            <location file="D:\hust-2025-cpp-task\gaoxing\week02\homework\Kvector\Kvector.cpp" line="166" column="40"/>
            <symbol>_start.get()+size1</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;_start.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;_start.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="D:/hust-2025-cpp-task/gaoxing/week02/homework/Kvector/Kvector.cpp">
            <location file="D:\hust-2025-cpp-task\gaoxing\week02\homework\Kvector\Kvector.cpp" line="167" column="29"/>
            <symbol>_start.get()</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;_start.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;_start.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="D:/hust-2025-cpp-task/gaoxing/week02/homework/Kvector/Kvector.cpp">
            <location file="D:\hust-2025-cpp-task\gaoxing\week02\homework\Kvector\Kvector.cpp" line="174" column="32"/>
            <symbol>_start.get()</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;_start.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;_start.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="D:/hust-2025-cpp-task/gaoxing/week02/homework/Kvector/Kvector.cpp">
            <location file="D:\hust-2025-cpp-task\gaoxing\week02\homework\Kvector\Kvector.cpp" line="205" column="28"/>
            <symbol>_start.get()</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;_start.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;_start.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="D:/hust-2025-cpp-task/gaoxing/week02/homework/Kvector/Kvector.cpp">
            <location file="D:\hust-2025-cpp-task\gaoxing\week02\homework\Kvector\Kvector.cpp" line="206" column="25"/>
            <symbol>_start.get()</symbol>
        </error>
11/88 files checked 3% done
Checking D:\hust-2025-cpp-task\gaoxing\week02\homework\Kvector\test.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398" file0="D:/hust-2025-cpp-task/gaoxing/week02/homework/Kvector/test.cpp">
            <location file="D:\hust-2025-cpp-task\gaoxing\week02\homework\Kvector\test.cpp" line="61" column="14" info="Shadow variable"/>
            <location file="D:\hust-2025-cpp-task\gaoxing\week02\homework\Kvector\test.cpp" line="35" column="9" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
12/88 files checked 4% done
Checking D:\hust-2025-cpp-task\guanyuhao\week02\homework\KVector\KVector.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;KVector &lt; int &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;KVector &lt; int &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/guanyuhao/week02/homework/KVector/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\guanyuhao\week02\homework\KVector\KVector.cpp" line="40" column="3"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/guanyuhao/week02/homework/KVector/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\guanyuhao\week02\homework\KVector\KVector.cpp" line="39" column="2"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;iterator&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;iterator&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/guanyuhao/week02/homework/KVector/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\guanyuhao\week02\homework\KVector\KVector.cpp" line="150" column="3"/>
            <symbol>iterator</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="D:/hust-2025-cpp-task/guanyuhao/week02/homework/KVector/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\guanyuhao\week02\homework\KVector\KVector.cpp" line="232" column="45"/>
        </error>
13/88 files checked 5% done
Checking D:\hust-2025-cpp-task\gujianan\week02\homework\Test.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="missingReturn" severity="error" msg="Found an exit path from function with non-void return type that has missing return statement" verbose="Found an exit path from function with non-void return type that has missing return statement" cwe="758" file0="D:/hust-2025-cpp-task/gujianan/week02/homework/Test.cpp">
            <location file="D:\hust-2025-cpp-task\gujianan\week02\homework\Vector.h" line="55" column="13"/>
        </error>
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;KVector &lt; int &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;KVector &lt; int &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/gujianan/week02/homework/Test.cpp">
            <location file="D:\hust-2025-cpp-task\gujianan\week02\homework\Vector.h" line="22" column="9"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="noOperatorEq" severity="warning" msg="Class &apos;KVector &lt; int &gt;&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;KVector &lt; int &gt;&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/gujianan/week02/homework/Test.cpp">
            <location file="D:\hust-2025-cpp-task\gujianan\week02\homework\Vector.h" line="22" column="9"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
14/88 files checked 5% done
Checking D:\hust-2025-cpp-task\guoyongxiang\week02\homework\KVector\cmake-build-debug\CMakeFiles\3.26.4\CompilerIdC\CMakeCCompilerId.c ...
Defines:
Undefines:
Includes:
Platform:win64
Checking D:\hust-2025-cpp-task\guoyongxiang\week02\homework\KVector\cmake-build-debug\CMakeFiles\3.26.4\CompilerIdC\CMakeCCompilerId.c: INT_178B;__INTEGRITY...
Checking D:\hust-2025-cpp-task\guoyongxiang\week02\homework\KVector\cmake-build-debug\CMakeFiles\3.26.4\CompilerIdC\CMakeCCompilerId.c: MPRAS;_MPRAS...
Checking D:\hust-2025-cpp-task\guoyongxiang\week02\homework\KVector\cmake-build-debug\CMakeFiles\3.26.4\CompilerIdC\CMakeCCompilerId.c: SCO_SV;_SCO_SV;sco_sv...
Checking D:\hust-2025-cpp-task\guoyongxiang\week02\homework\KVector\cmake-build-debug\CMakeFiles\3.26.4\CompilerIdC\CMakeCCompilerId.c: SDCC;__SDCC_VERSION_MAJOR...
Checking D:\hust-2025-cpp-task\guoyongxiang\week02\homework\KVector\cmake-build-debug\CMakeFiles\3.26.4\CompilerIdC\CMakeCCompilerId.c: SDCC;__SDCC_VERSION_MAJOR;__SDCC_VERSION_MAJOR...
Checking D:\hust-2025-cpp-task\guoyongxiang\week02\homework\KVector\cmake-build-debug\CMakeFiles\3.26.4\CompilerIdC\CMakeCCompilerId.c: SIMULATE_VERSION_TWEAK...
Checking D:\hust-2025-cpp-task\guoyongxiang\week02\homework\KVector\cmake-build-debug\CMakeFiles\3.26.4\CompilerIdC\CMakeCCompilerId.c: WIN32;_WIN32;__WIN32__...
Checking D:\hust-2025-cpp-task\guoyongxiang\week02\homework\KVector\cmake-build-debug\CMakeFiles\3.26.4\CompilerIdC\CMakeCCompilerId.c: XENIX;_XENIX;__XENIX__...
Checking D:\hust-2025-cpp-task\guoyongxiang\week02\homework\KVector\cmake-build-debug\CMakeFiles\3.26.4\CompilerIdC\CMakeCCompilerId.c: _ADI_COMPILER...
Checking D:\hust-2025-cpp-task\guoyongxiang\week02\homework\KVector\cmake-build-debug\CMakeFiles\3.26.4\CompilerIdC\CMakeCCompilerId.c: _ADI_COMPILER;__VERSIONNUM__...
Checking D:\hust-2025-cpp-task\guoyongxiang\week02\homework\KVector\cmake-build-debug\CMakeFiles\3.26.4\CompilerIdC\CMakeCCompilerId.c: _AIX;__AIX;__AIX__;__aix;__aix__...
15/88 files checked 9% done
Checking D:\hust-2025-cpp-task\guoyongxiang\week02\homework\KVector\cmake-build-debug\CMakeFiles\3.26.4\CompilerIdCXX\CMakeCXXCompilerId.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
Checking D:\hust-2025-cpp-task\guoyongxiang\week02\homework\KVector\cmake-build-debug\CMakeFiles\3.26.4\CompilerIdCXX\CMakeCXXCompilerId.cpp: INT_178B;__INTEGRITY...
Checking D:\hust-2025-cpp-task\guoyongxiang\week02\homework\KVector\cmake-build-debug\CMakeFiles\3.26.4\CompilerIdCXX\CMakeCXXCompilerId.cpp: MPRAS;_MPRAS...
Checking D:\hust-2025-cpp-task\guoyongxiang\week02\homework\KVector\cmake-build-debug\CMakeFiles\3.26.4\CompilerIdCXX\CMakeCXXCompilerId.cpp: SCO_SV;_SCO_SV;sco_sv...
Checking D:\hust-2025-cpp-task\guoyongxiang\week02\homework\KVector\cmake-build-debug\CMakeFiles\3.26.4\CompilerIdCXX\CMakeCXXCompilerId.cpp: SIMULATE_VERSION_TWEAK...
Checking D:\hust-2025-cpp-task\guoyongxiang\week02\homework\KVector\cmake-build-debug\CMakeFiles\3.26.4\CompilerIdCXX\CMakeCXXCompilerId.cpp: WIN32;_WIN32;__WIN32__...
Checking D:\hust-2025-cpp-task\guoyongxiang\week02\homework\KVector\cmake-build-debug\CMakeFiles\3.26.4\CompilerIdCXX\CMakeCXXCompilerId.cpp: XENIX;_XENIX;__XENIX__...
Checking D:\hust-2025-cpp-task\guoyongxiang\week02\homework\KVector\cmake-build-debug\CMakeFiles\3.26.4\CompilerIdCXX\CMakeCXXCompilerId.cpp: _ADI_COMPILER...
Checking D:\hust-2025-cpp-task\guoyongxiang\week02\homework\KVector\cmake-build-debug\CMakeFiles\3.26.4\CompilerIdCXX\CMakeCXXCompilerId.cpp: _ADI_COMPILER;__VERSIONNUM__...
Checking D:\hust-2025-cpp-task\guoyongxiang\week02\homework\KVector\cmake-build-debug\CMakeFiles\3.26.4\CompilerIdCXX\CMakeCXXCompilerId.cpp: _AIX;__AIX;__AIX__;__aix;__aix__...
Checking D:\hust-2025-cpp-task\guoyongxiang\week02\homework\KVector\cmake-build-debug\CMakeFiles\3.26.4\CompilerIdCXX\CMakeCXXCompilerId.cpp: _BEOS;__BEOS__;__BeOS...
Checking D:\hust-2025-cpp-task\guoyongxiang\week02\homework\KVector\cmake-build-debug\CMakeFiles\3.26.4\CompilerIdCXX\CMakeCXXCompilerId.cpp: _CRAYC...
16/88 files checked 12% done
Checking D:\hust-2025-cpp-task\guoyongxiang\week02\homework\KVector\main.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
17/88 files checked 12% done
Checking D:\hust-2025-cpp-task\hewenxuan\week02\homework\test.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;KVector &lt; int &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;KVector &lt; int &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/hewenxuan/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\hewenxuan\week02\homework\KVector.h" line="49" column="44"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;KVector &lt; char &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;KVector &lt; char &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/hewenxuan/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\hewenxuan\week02\homework\KVector.h" line="49" column="44"/>
            <symbol>KVector &lt; char &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/hewenxuan/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\hewenxuan\week02\homework\KVector.h" line="47" column="5"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;iterator&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;iterator&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/hewenxuan/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\hewenxuan\week02\homework\KVector.h" line="18" column="9"/>
            <symbol>iterator</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector &lt; char &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector &lt; char &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/hewenxuan/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\hewenxuan\week02\homework\KVector.h" line="47" column="5"/>
            <symbol>KVector &lt; char &gt;</symbol>
        </error>
18/88 files checked 13% done
Checking D:\hust-2025-cpp-task\hongweihao\week02\homework\test.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector &lt; int , DefaultAllocator &lt; int &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector &lt; int , DefaultAllocator &lt; int &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/hongweihao/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\hongweihao\week02\homework\KVector2.h" line="80" column="5"/>
            <symbol>KVector &lt; int , DefaultAllocator &lt; int &gt; &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;Iterator&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;Iterator&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/hongweihao/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\hongweihao\week02\homework\KVector2.h" line="57" column="9"/>
            <symbol>Iterator</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector &lt; int , CustomAllocator &lt; int &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector &lt; int , CustomAllocator &lt; int &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/hongweihao/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\hongweihao\week02\homework\KVector2.h" line="80" column="5"/>
            <symbol>KVector &lt; int , CustomAllocator &lt; int &gt; &gt;</symbol>
        </error>
19/88 files checked 13% done
Checking D:\hust-2025-cpp-task\huangxingyang\week02\homework\kvector_test.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="invalidPrintfArgType_uint" severity="portability" msg="%llu in format string (no. 1) requires &apos;unsigned long long&apos; but the argument type is &apos;size_t {aka unsigned long long}&apos;." verbose="%llu in format string (no. 1) requires &apos;unsigned long long&apos; but the argument type is &apos;size_t {aka unsigned long long}&apos;." cwe="686" file0="D:/hust-2025-cpp-task/huangxingyang/week02/homework/kvector_test.cpp">
            <location file="D:\hust-2025-cpp-task\huangxingyang\week02\homework\kvector_test.cpp" line="12" column="2"/>
        </error>
        <error id="invalidPrintfArgType_uint" severity="portability" msg="%llu in format string (no. 2) requires &apos;unsigned long long&apos; but the argument type is &apos;size_t {aka unsigned long long}&apos;." verbose="%llu in format string (no. 2) requires &apos;unsigned long long&apos; but the argument type is &apos;size_t {aka unsigned long long}&apos;." cwe="686" file0="D:/hust-2025-cpp-task/huangxingyang/week02/homework/kvector_test.cpp">
            <location file="D:\hust-2025-cpp-task\huangxingyang\week02\homework\kvector_test.cpp" line="12" column="2"/>
        </error>
        <error id="invalidPrintfArgType_uint" severity="portability" msg="%llu in format string (no. 1) requires &apos;unsigned long long&apos; but the argument type is &apos;size_t {aka unsigned long long}&apos;." verbose="%llu in format string (no. 1) requires &apos;unsigned long long&apos; but the argument type is &apos;size_t {aka unsigned long long}&apos;." cwe="686" file0="D:/hust-2025-cpp-task/huangxingyang/week02/homework/kvector_test.cpp">
            <location file="D:\hust-2025-cpp-task\huangxingyang\week02\homework\kvector_test.cpp" line="110" column="3"/>
        </error>
20/88 files checked 13% done
Checking D:\hust-2025-cpp-task\lijunlin\week02\homework\hw\hw\main.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="constVariableReference" severity="style" msg="Variable &apos;x&apos; can be declared as reference to const" verbose="Variable &apos;x&apos; can be declared as reference to const" cwe="398" file0="D:/hust-2025-cpp-task/lijunlin/week02/homework/hw/hw/main.cpp">
            <location file="D:\hust-2025-cpp-task\lijunlin\week02\homework\hw\hw\main.cpp" line="15" column="16" info="Variable &apos;x&apos; can be declared as reference to const"/>
            <symbol>x</symbol>
        </error>
21/88 files checked 13% done
Checking D:\hust-2025-cpp-task\limingyue\week02\homework\KVector\KVector\kVector.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;data.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;data.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="D:/hust-2025-cpp-task/limingyue/week02/homework/KVector/KVector/kVector.cpp">
            <location file="D:\hust-2025-cpp-task\limingyue\week02\homework\KVector\KVector\kVector.h" line="43" column="27"/>
            <symbol>data.get()</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;data.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;data.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="D:/hust-2025-cpp-task/limingyue/week02/homework/KVector/KVector/kVector.cpp">
            <location file="D:\hust-2025-cpp-task\limingyue\week02\homework\KVector\KVector\kVector.h" line="47" column="27"/>
            <symbol>data.get()</symbol>
        </error>
22/88 files checked 14% done
Checking D:\hust-2025-cpp-task\limingyue\week02\homework\KVector\KVector\test.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
23/88 files checked 14% done
Checking D:\hust-2025-cpp-task\lipeiyang\week02\homework\Kvector.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;Kvector&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;Kvector&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/lipeiyang/week02/homework/Kvector.cpp">
            <location file="D:\hust-2025-cpp-task\lipeiyang\week02\homework\Kvector.cpp" line="42" column="3"/>
            <symbol>Kvector</symbol>
        </error>
        <error id="noOperatorEq" severity="warning" msg="Class &apos;Kvector&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;Kvector&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/lipeiyang/week02/homework/Kvector.cpp">
            <location file="D:\hust-2025-cpp-task\lipeiyang\week02\homework\Kvector.cpp" line="42" column="3"/>
            <symbol>Kvector</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;Kvector&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;Kvector&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/lipeiyang/week02/homework/Kvector.cpp">
            <location file="D:\hust-2025-cpp-task\lipeiyang\week02\homework\Kvector.cpp" line="30" column="2"/>
            <symbol>Kvector</symbol>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &apos;m_vec_end&apos; is reassigned a value before the old one has been used." verbose="Variable &apos;m_vec_end&apos; is reassigned a value before the old one has been used." cwe="563" file0="D:/hust-2025-cpp-task/lipeiyang/week02/homework/Kvector.cpp">
            <location file="D:\hust-2025-cpp-task\lipeiyang\week02\homework\Kvector.cpp" line="27" column="13" info="m_vec_end is overwritten"/>
            <location file="D:\hust-2025-cpp-task\lipeiyang\week02\homework\Kvector.cpp" line="24" column="14" info="m_vec_end is assigned"/>
            <symbol>m_vec_end</symbol>
        </error>
24/88 files checked 15% done
Checking D:\hust-2025-cpp-task\lishiyu2\week02\homework\KVector.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="objectIndex" severity="warning" msg="The address of local variable &apos;size&apos; might be accessed at non-zero index." verbose="The address of local variable &apos;size&apos; might be accessed at non-zero index." cwe="758" file0="D:/hust-2025-cpp-task/lishiyu2/week02/homework/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\lishiyu2\week02\homework\KVector.h" line="23" column="18"/>
            <location file="D:\hust-2025-cpp-task\lishiyu2\week02\homework\KVector.h" line="19" column="15" info="Address of variable taken here."/>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;pos&apos; is less than zero." verbose="The unsigned expression &apos;pos&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="D:/hust-2025-cpp-task/lishiyu2/week02/homework/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\lishiyu2\week02\homework\KVector.h" line="115" column="11" info="Unsigned less than zero"/>
            <symbol>pos</symbol>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;pos&apos; is less than zero." verbose="The unsigned expression &apos;pos&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="D:/hust-2025-cpp-task/lishiyu2/week02/homework/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\lishiyu2\week02\homework\KVector.h" line="157" column="11" info="Unsigned less than zero"/>
            <symbol>pos</symbol>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;pos&apos; is less than zero." verbose="The unsigned expression &apos;pos&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="D:/hust-2025-cpp-task/lishiyu2/week02/homework/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\lishiyu2\week02\homework\KVector.h" line="190" column="11" info="Unsigned less than zero"/>
            <symbol>pos</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;temp&apos; can be declared as pointer to const" verbose="Variable &apos;temp&apos; can be declared as pointer to const" cwe="398" file0="D:/hust-2025-cpp-task/lishiyu2/week02/homework/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\lishiyu2\week02\homework\KVector.h" line="19" column="8" info="Variable &apos;temp&apos; can be declared as pointer to const"/>
            <symbol>temp</symbol>
        </error>
25/88 files checked 16% done
Checking D:\hust-2025-cpp-task\liucanmin\week02\homework\KVector\KVector.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/liucanmin/week02/homework/KVector/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\liucanmin\week02\homework\KVector\KVector.cpp" line="26" column="5"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/liucanmin/week02/homework/KVector/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\liucanmin\week02\homework\KVector\KVector.cpp" line="33" column="5"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;index&apos; is less than zero." verbose="The unsigned expression &apos;index&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="D:/hust-2025-cpp-task/liucanmin/week02/homework/KVector/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\liucanmin\week02\homework\KVector\KVector.cpp" line="118" column="36" info="Unsigned less than zero"/>
            <symbol>index</symbol>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;index&apos; is less than zero." verbose="The unsigned expression &apos;index&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="D:/hust-2025-cpp-task/liucanmin/week02/homework/KVector/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\liucanmin\week02\homework\KVector\KVector.cpp" line="128" column="36" info="Unsigned less than zero"/>
            <symbol>index</symbol>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;index&apos; is less than zero." verbose="The unsigned expression &apos;index&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="D:/hust-2025-cpp-task/liucanmin/week02/homework/KVector/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\liucanmin\week02\homework\KVector\KVector.cpp" line="159" column="36" info="Unsigned less than zero"/>
            <symbol>index</symbol>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;index&apos; is less than zero." verbose="The unsigned expression &apos;index&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="D:/hust-2025-cpp-task/liucanmin/week02/homework/KVector/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\liucanmin\week02\homework\KVector\KVector.cpp" line="181" column="35" info="Unsigned less than zero"/>
            <symbol>index</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;other.data.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;other.data.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="D:/hust-2025-cpp-task/liucanmin/week02/homework/KVector/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\liucanmin\week02\homework\KVector\KVector.cpp" line="64" column="58"/>
            <symbol>other.data.get()</symbol>
        </error>
26/88 files checked 17% done
Checking D:\hust-2025-cpp-task\liushaoxin\week02\homework\KVector\KVector.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="missingReturn" severity="error" msg="Found an exit path from function with non-void return type that has missing return statement" verbose="Found an exit path from function with non-void return type that has missing return statement" cwe="758" file0="D:/hust-2025-cpp-task/liushaoxin/week02/homework/KVector/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\liushaoxin\week02\homework\KVector\KVector.cpp" line="90" column="4"/>
        </error>
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;kvector &lt; int &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;kvector &lt; int &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/liushaoxin/week02/homework/KVector/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\liushaoxin\week02\homework\KVector\KVector.cpp" line="18" column="3"/>
            <symbol>kvector &lt; int &gt;</symbol>
        </error>
        <error id="noOperatorEq" severity="warning" msg="Class &apos;kvector &lt; int &gt;&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;kvector &lt; int &gt;&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/liushaoxin/week02/homework/KVector/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\liushaoxin\week02\homework\KVector\KVector.cpp" line="18" column="3"/>
            <symbol>kvector &lt; int &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;kvector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;kvector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/liushaoxin/week02/homework/KVector/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\liushaoxin\week02\homework\KVector\KVector.cpp" line="14" column="2"/>
            <symbol>kvector &lt; int &gt;</symbol>
        </error>
27/88 files checked 17% done
Checking D:\hust-2025-cpp-task\liuweihao\week02\homework\test.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;KVector &lt; int &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;KVector &lt; int &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/liuweihao/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\liuweihao\week02\homework\test.cpp" line="52" column="9"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;KVector &lt; std :: string &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;KVector &lt; std :: string &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/liuweihao/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\liuweihao\week02\homework\test.cpp" line="52" column="9"/>
            <symbol>KVector &lt; std :: string &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/liuweihao/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\liuweihao\week02\homework\test.cpp" line="42" column="5"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector &lt; std :: string &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector &lt; std :: string &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/liuweihao/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\liuweihao\week02\homework\test.cpp" line="42" column="5"/>
            <symbol>KVector &lt; std :: string &gt;</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;data&apos; should be passed by const reference." verbose="Parameter &apos;data&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="D:/hust-2025-cpp-task/liuweihao/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\liuweihao\week02\homework\test.cpp" line="56" column="17"/>
            <symbol>data</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;data&apos; should be passed by const reference." verbose="Parameter &apos;data&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="D:/hust-2025-cpp-task/liuweihao/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\liuweihao\week02\homework\test.cpp" line="75" column="17"/>
            <symbol>data</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;data&apos; should be passed by const reference." verbose="Parameter &apos;data&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="D:/hust-2025-cpp-task/liuweihao/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\liuweihao\week02\homework\test.cpp" line="157" column="19"/>
            <symbol>data</symbol>
        </error>
28/88 files checked 18% done
Checking D:\hust-2025-cpp-task\liuya\week02\homework\demo.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;KVector &lt; int &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;KVector &lt; int &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/liuya/week02/homework/demo.cpp">
            <location file="D:\hust-2025-cpp-task\liuya\week02\homework\demo.cpp" line="28" column="9"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;Iterator&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;Iterator&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/liuya/week02/homework/demo.cpp">
            <location file="D:\hust-2025-cpp-task\liuya\week02\homework\demo.cpp" line="106" column="9"/>
            <symbol>Iterator</symbol>
        </error>
29/88 files checked 19% done
Checking D:\hust-2025-cpp-task\liuzhigang\week02\homework\KVector\main.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;KVector &lt; int &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;KVector &lt; int &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/liuzhigang/week02/homework/KVector/main.cpp">
            <location file="D:\hust-2025-cpp-task\liuzhigang\week02\homework\KVector\KVector.h" line="66" column="9"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="noOperatorEq" severity="warning" msg="Class &apos;KVector &lt; int &gt;&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;KVector &lt; int &gt;&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/liuzhigang/week02/homework/KVector/main.cpp">
            <location file="D:\hust-2025-cpp-task\liuzhigang\week02\homework\KVector\KVector.h" line="66" column="9"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/liuzhigang/week02/homework/KVector/main.cpp">
            <location file="D:\hust-2025-cpp-task\liuzhigang\week02\homework\KVector\KVector.h" line="60" column="5"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;iterator&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;iterator&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/liuzhigang/week02/homework/KVector/main.cpp">
            <location file="D:\hust-2025-cpp-task\liuzhigang\week02\homework\KVector\KVector.h" line="24" column="9"/>
            <symbol>iterator</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="D:/hust-2025-cpp-task/liuzhigang/week02/homework/KVector/main.cpp">
            <location file="D:\hust-2025-cpp-task\liuzhigang\week02\homework\KVector\main.cpp" line="51" column="68"/>
        </error>
30/88 files checked 19% done
Checking D:\hust-2025-cpp-task\liuziyi\week02\homework\KVectorTest.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
31/88 files checked 20% done
Checking D:\hust-2025-cpp-task\lizhuolong\week02\homework\Work_KVector\main.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="useInitializationList" severity="performance" msg="Variable &apos;data&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;data&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="D:/hust-2025-cpp-task/lizhuolong/week02/homework/Work_KVector/main.cpp">
            <location file="D:\hust-2025-cpp-task\lizhuolong\week02\homework\Work_KVector\main.cpp" line="34" column="9"/>
            <symbol>data</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/lizhuolong/week02/homework/Work_KVector/main.cpp">
            <location file="D:\hust-2025-cpp-task\lizhuolong\week02\homework\Work_KVector\main.cpp" line="19" column="5"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;Iterator&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;Iterator&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/lizhuolong/week02/homework/Work_KVector/main.cpp">
            <location file="D:\hust-2025-cpp-task\lizhuolong\week02\homework\Work_KVector\main.cpp" line="128" column="9"/>
            <symbol>Iterator</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector &lt; std :: string &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector &lt; std :: string &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/lizhuolong/week02/homework/Work_KVector/main.cpp">
            <location file="D:\hust-2025-cpp-task\lizhuolong\week02\homework\Work_KVector\main.cpp" line="19" column="5"/>
            <symbol>KVector &lt; std :: string &gt;</symbol>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;!newData&apos; is always false" verbose="Condition &apos;!newData&apos; is always false" cwe="570" file0="D:/hust-2025-cpp-task/lizhuolong/week02/homework/Work_KVector/main.cpp">
            <location file="D:\hust-2025-cpp-task\lizhuolong\week02\homework\Work_KVector\main.cpp" line="173" column="13" info="Condition &apos;!newData&apos; is always false"/>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;data.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;data.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="D:/hust-2025-cpp-task/lizhuolong/week02/homework/Work_KVector/main.cpp">
            <location file="D:\hust-2025-cpp-task\lizhuolong\week02\homework\Work_KVector\main.cpp" line="151" column="36"/>
            <symbol>data.get()</symbol>
        </error>
32/88 files checked 21% done
Checking D:\hust-2025-cpp-task\mahaipeng\week02\homework\main.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="constVariableReference" severity="style" msg="Variable &apos;element&apos; can be declared as reference to const" verbose="Variable &apos;element&apos; can be declared as reference to const" cwe="398" file0="D:/hust-2025-cpp-task/mahaipeng/week02/homework/main.cpp">
            <location file="D:\hust-2025-cpp-task\mahaipeng\week02\homework\main.cpp" line="31" column="16" info="Variable &apos;element&apos; can be declared as reference to const"/>
            <symbol>element</symbol>
        </error>
33/88 files checked 21% done
Checking D:\hust-2025-cpp-task\mayiqi\week02\homework\KVector\KVector\KVector.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="missingReturn" severity="error" msg="Found an exit path from function with non-void return type that has missing return statement" verbose="Found an exit path from function with non-void return type that has missing return statement" cwe="758" file0="D:/hust-2025-cpp-task/mayiqi/week02/homework/KVector/KVector/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\mayiqi\week02\homework\KVector\KVector\KVector.cpp" line="24" column="1"/>
        </error>
        <error id="missingReturn" severity="error" msg="Found an exit path from function with non-void return type that has missing return statement" verbose="Found an exit path from function with non-void return type that has missing return statement" cwe="758" file0="D:/hust-2025-cpp-task/mayiqi/week02/homework/KVector/KVector/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\mayiqi\week02\homework\KVector\KVector\KVector.cpp" line="57" column="1"/>
        </error>
        <error id="missingReturn" severity="error" msg="Found an exit path from function with non-void return type that has missing return statement" verbose="Found an exit path from function with non-void return type that has missing return statement" cwe="758" file0="D:/hust-2025-cpp-task/mayiqi/week02/homework/KVector/KVector/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\mayiqi\week02\homework\KVector\KVector\KVector.cpp" line="63" column="1"/>
        </error>
        <error id="operatorEqMissingReturnStatement" severity="error" msg="No &apos;return&apos; statement in non-void function causes undefined behavior." verbose="No &apos;return&apos; statement in non-void function causes undefined behavior." cwe="398" file0="D:/hust-2025-cpp-task/mayiqi/week02/homework/KVector/KVector/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\mayiqi\week02\homework\KVector\KVector\KVector.cpp" line="21" column="22"/>
        </error>
34/88 files checked 21% done
Checking D:\hust-2025-cpp-task\mayiqi\week02\homework\KVector\KVector\main.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="unreadVariable" severity="style" msg="Variable &apos;vecInt[0]&apos; is assigned a value that is never used." verbose="Variable &apos;vecInt[0]&apos; is assigned a value that is never used." cwe="563" file0="D:/hust-2025-cpp-task/mayiqi/week02/homework/KVector/KVector/main.cpp">
            <location file="D:\hust-2025-cpp-task\mayiqi\week02\homework\KVector\KVector\main.cpp" line="12" column="15"/>
            <symbol>vecInt[0]</symbol>
        </error>
35/88 files checked 21% done
Checking D:\hust-2025-cpp-task\mengxingyu\week02\homework\jinshan_hmwk01.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;KVector &lt; int &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;KVector &lt; int &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/mengxingyu/week02/homework/jinshan_hmwk01.cpp">
            <location file="D:\hust-2025-cpp-task\mengxingyu\week02\homework\jinshan_hmwk01.cpp" line="23" column="69"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="noOperatorEq" severity="warning" msg="Class &apos;KVector &lt; int &gt;&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;KVector &lt; int &gt;&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/mengxingyu/week02/homework/jinshan_hmwk01.cpp">
            <location file="D:\hust-2025-cpp-task\mengxingyu\week02\homework\jinshan_hmwk01.cpp" line="23" column="69"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;KVector &lt; std :: string &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;KVector &lt; std :: string &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/mengxingyu/week02/homework/jinshan_hmwk01.cpp">
            <location file="D:\hust-2025-cpp-task\mengxingyu\week02\homework\jinshan_hmwk01.cpp" line="23" column="69"/>
            <symbol>KVector &lt; std :: string &gt;</symbol>
        </error>
        <error id="noOperatorEq" severity="warning" msg="Class &apos;KVector &lt; std :: string &gt;&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;KVector &lt; std :: string &gt;&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/mengxingyu/week02/homework/jinshan_hmwk01.cpp">
            <location file="D:\hust-2025-cpp-task\mengxingyu\week02\homework\jinshan_hmwk01.cpp" line="23" column="69"/>
            <symbol>KVector &lt; std :: string &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;iterator&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;iterator&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/mengxingyu/week02/homework/jinshan_hmwk01.cpp">
            <location file="D:\hust-2025-cpp-task\mengxingyu\week02\homework\jinshan_hmwk01.cpp" line="121" column="9"/>
            <symbol>iterator</symbol>
        </error>
36/88 files checked 22% done
Checking D:\hust-2025-cpp-task\niezhihe\week02\homework\test.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;KVector &lt; int &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;KVector &lt; int &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/niezhihe/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\niezhihe\week02\homework\kvector.h" line="30" column="3"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;KVector &lt; std :: string &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;KVector &lt; std :: string &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/niezhihe/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\niezhihe\week02\homework\kvector.h" line="30" column="3"/>
            <symbol>KVector &lt; std :: string &gt;</symbol>
        </error>
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;KVector &lt; std :: vector &lt; int &gt; &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;KVector &lt; std :: vector &lt; int &gt; &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/niezhihe/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\niezhihe\week02\homework\kvector.h" line="30" column="3"/>
            <symbol>KVector &lt; std :: vector &lt; int &gt; &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/niezhihe/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\niezhihe\week02\homework\kvector.h" line="23" column="2"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;Iterator&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;Iterator&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/niezhihe/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\niezhihe\week02\homework\kvector.h" line="132" column="3"/>
            <symbol>Iterator</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector &lt; std :: string &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector &lt; std :: string &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/niezhihe/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\niezhihe\week02\homework\kvector.h" line="23" column="2"/>
            <symbol>KVector &lt; std :: string &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector &lt; std :: vector &lt; int &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector &lt; std :: vector &lt; int &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/niezhihe/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\niezhihe\week02\homework\kvector.h" line="23" column="2"/>
            <symbol>KVector &lt; std :: vector &lt; int &gt; &gt;</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;elem&apos; should be passed by const reference." verbose="Parameter &apos;elem&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="D:/hust-2025-cpp-task/niezhihe/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\niezhihe\week02\homework\kvector.h" line="45" column="18"/>
            <symbol>elem</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;elem&apos; should be passed by const reference." verbose="Parameter &apos;elem&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="D:/hust-2025-cpp-task/niezhihe/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\niezhihe\week02\homework\kvector.h" line="114" column="27"/>
            <symbol>elem</symbol>
        </error>
37/88 files checked 22% done
Checking D:\hust-2025-cpp-task\qiuhaichao\week02\homework\Project1\源.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;KVector &lt; int &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;KVector &lt; int &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/qiuhaichao/week02/homework/Project1/源.cpp">
            <location file="D:\hust-2025-cpp-task\qiuhaichao\week02\homework\Project1\源.cpp" line="20" column="52"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="noOperatorEq" severity="warning" msg="Class &apos;KVector &lt; int &gt;&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;KVector &lt; int &gt;&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/qiuhaichao/week02/homework/Project1/源.cpp">
            <location file="D:\hust-2025-cpp-task\qiuhaichao\week02\homework\Project1\源.cpp" line="20" column="52"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/qiuhaichao/week02/homework/Project1/源.cpp">
            <location file="D:\hust-2025-cpp-task\qiuhaichao\week02\homework\Project1\源.cpp" line="17" column="9"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;Iterator&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;Iterator&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/qiuhaichao/week02/homework/Project1/源.cpp">
            <location file="D:\hust-2025-cpp-task\qiuhaichao\week02\homework\Project1\源.cpp" line="106" column="17"/>
            <symbol>Iterator</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="D:/hust-2025-cpp-task/qiuhaichao/week02/homework/Project1/源.cpp">
            <location file="D:\hust-2025-cpp-task\qiuhaichao\week02\homework\Project1\源.cpp" line="164" column="68"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="D:/hust-2025-cpp-task/qiuhaichao/week02/homework/Project1/源.cpp">
            <location file="D:\hust-2025-cpp-task\qiuhaichao\week02\homework\Project1\源.cpp" line="175" column="68"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="D:/hust-2025-cpp-task/qiuhaichao/week02/homework/Project1/源.cpp">
            <location file="D:\hust-2025-cpp-task\qiuhaichao\week02\homework\Project1\源.cpp" line="183" column="68"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="D:/hust-2025-cpp-task/qiuhaichao/week02/homework/Project1/源.cpp">
            <location file="D:\hust-2025-cpp-task\qiuhaichao\week02\homework\Project1\源.cpp" line="191" column="68"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="D:/hust-2025-cpp-task/qiuhaichao/week02/homework/Project1/源.cpp">
            <location file="D:\hust-2025-cpp-task\qiuhaichao\week02\homework\Project1\源.cpp" line="199" column="68"/>
        </error>
38/88 files checked 23% done
Checking D:\hust-2025-cpp-task\raozinan\week02\homework\test.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="missingReturn" severity="error" msg="Found an exit path from function with non-void return type that has missing return statement" verbose="Found an exit path from function with non-void return type that has missing return statement" cwe="758" file0="D:/hust-2025-cpp-task/raozinan/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\raozinan\week02\homework\KVector.h" line="151" column="3"/>
        </error>
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;KVector &lt; int &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;KVector &lt; int &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/raozinan/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\raozinan\week02\homework\KVector.h" line="38" column="2"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;KVector &lt; double &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;KVector &lt; double &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/raozinan/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\raozinan\week02\homework\KVector.h" line="38" column="2"/>
            <symbol>KVector &lt; double &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KIterator&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KIterator&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/raozinan/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\raozinan\week02\homework\KIterator.h" line="11" column="2"/>
            <symbol>KIterator</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/raozinan/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\raozinan\week02\homework\KVector.h" line="14" column="2"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector &lt; double &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector &lt; double &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/raozinan/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\raozinan\week02\homework\KVector.h" line="14" column="2"/>
            <symbol>KVector &lt; double &gt;</symbol>
        </error>
        <error id="mismatchAllocDealloc" severity="error" msg="Mismatching allocation and deallocation: KVector &lt; int &gt;::arr" verbose="Mismatching allocation and deallocation: KVector &lt; int &gt;::arr" cwe="762" file0="D:/hust-2025-cpp-task/raozinan/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\raozinan\week02\homework\KVector.h" line="56" column="22"/>
            <symbol>KVector &lt; int &gt;::arr</symbol>
        </error>
        <error id="mismatchAllocDealloc" severity="error" msg="Mismatching allocation and deallocation: KVector &lt; double &gt;::arr" verbose="Mismatching allocation and deallocation: KVector &lt; double &gt;::arr" cwe="762" file0="D:/hust-2025-cpp-task/raozinan/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\raozinan\week02\homework\KVector.h" line="56" column="22"/>
            <symbol>KVector &lt; double &gt;::arr</symbol>
        </error>
39/88 files checked 23% done
Checking D:\hust-2025-cpp-task\rensiyi\week02\homework\testKVector.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;KVector &lt; int &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;KVector &lt; int &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/rensiyi/week02/homework/testKVector.cpp">
            <location file="D:\hust-2025-cpp-task\rensiyi\week02\homework\kvector.h" line="66" column="9"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/rensiyi/week02/homework/testKVector.cpp">
            <location file="D:\hust-2025-cpp-task\rensiyi\week02\homework\kvector.h" line="64" column="5"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;Iterator&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;Iterator&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/rensiyi/week02/homework/testKVector.cpp">
            <location file="D:\hust-2025-cpp-task\rensiyi\week02\homework\kvector.h" line="174" column="9"/>
            <symbol>Iterator</symbol>
        </error>
40/88 files checked 23% done
Checking D:\hust-2025-cpp-task\sundongxing\week02\homework\KVector.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;vector&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;vector&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/sundongxing/week02/homework/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\sundongxing\week02\homework\KVector.cpp" line="20" column="3"/>
            <symbol>vector</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;it&apos; can be declared as pointer to const" verbose="Parameter &apos;it&apos; can be declared as pointer to const" cwe="398" file0="D:/hust-2025-cpp-task/sundongxing/week02/homework/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\sundongxing\week02\homework\KVector.cpp" line="103" column="24" info="Parameter &apos;it&apos; can be declared as pointer to const"/>
            <symbol>it</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;it&apos; can be declared as pointer to const" verbose="Parameter &apos;it&apos; can be declared as pointer to const" cwe="398" file0="D:/hust-2025-cpp-task/sundongxing/week02/homework/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\sundongxing\week02\homework\KVector.cpp" line="137" column="23" info="Parameter &apos;it&apos; can be declared as pointer to const"/>
            <symbol>it</symbol>
        </error>
41/88 files checked 24% done
Checking D:\hust-2025-cpp-task\sundongxing\week02\homework\test.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;vector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;vector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/sundongxing/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\sundongxing\week02\homework\KVector.cpp" line="20" column="3"/>
            <symbol>vector &lt; int &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;vector &lt; std :: string &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;vector &lt; std :: string &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/sundongxing/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\sundongxing\week02\homework\KVector.cpp" line="20" column="3"/>
            <symbol>vector &lt; std :: string &gt;</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;val&apos; should be passed by const reference." verbose="Parameter &apos;val&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="D:/hust-2025-cpp-task/sundongxing/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\sundongxing\week02\homework\KVector.cpp" line="68" column="29"/>
            <symbol>val</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;val&apos; should be passed by const reference." verbose="Parameter &apos;val&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="D:/hust-2025-cpp-task/sundongxing/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\sundongxing\week02\homework\KVector.cpp" line="103" column="39"/>
            <symbol>val</symbol>
        </error>
        <error id="accessMoved" severity="warning" msg="Access of moved variable &apos;copyVector&apos;." verbose="Access of moved variable &apos;copyVector&apos;." cwe="672" file0="D:/hust-2025-cpp-task/sundongxing/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\sundongxing\week02\homework\test.cpp" line="37" column="31" info="Access of moved variable &apos;copyVector&apos;."/>
            <location file="D:\hust-2025-cpp-task\sundongxing\week02\homework\test.cpp" line="33" column="34" info="Calling std::move(copyVector)"/>
            <symbol>copyVector</symbol>
        </error>
42/88 files checked 24% done
Checking D:\hust-2025-cpp-task\tanfeipeng\week02\homework\week2\vector1.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="noOperatorEq" severity="warning" msg="Class &apos;KVector &lt; int &gt;&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;KVector &lt; int &gt;&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/tanfeipeng/week02/homework/week2/vector1.cpp">
            <location file="D:\hust-2025-cpp-task\tanfeipeng\week02\homework\week2\vector1.cpp" line="9" column="9"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/tanfeipeng/week02/homework/week2/vector1.cpp">
            <location file="D:\hust-2025-cpp-task\tanfeipeng\week02\homework\week2\vector1.cpp" line="8" column="5"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
43/88 files checked 25% done
Checking D:\hust-2025-cpp-task\tangjianhua\week02\homework\main.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="noOperatorEq" severity="warning" msg="Class &apos;KVector &lt; float &gt;&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;KVector &lt; float &gt;&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/tangjianhua/week02/homework/main.cpp">
            <location file="D:\hust-2025-cpp-task\tangjianhua\week02\homework\KVector.hpp" line="30" column="4"/>
            <symbol>KVector &lt; float &gt;</symbol>
        </error>
        <error id="noOperatorEq" severity="warning" msg="Class &apos;KVector &lt; int &gt;&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;KVector &lt; int &gt;&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/tangjianhua/week02/homework/main.cpp">
            <location file="D:\hust-2025-cpp-task\tangjianhua\week02\homework\KVector.hpp" line="30" column="4"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector &lt; float &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector &lt; float &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/tangjianhua/week02/homework/main.cpp">
            <location file="D:\hust-2025-cpp-task\tangjianhua\week02\homework\KVector.hpp" line="17" column="2"/>
            <symbol>KVector &lt; float &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/tangjianhua/week02/homework/main.cpp">
            <location file="D:\hust-2025-cpp-task\tangjianhua\week02\homework\KVector.hpp" line="17" column="2"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
44/88 files checked 25% done
Checking D:\hust-2025-cpp-task\tianweiye\week02\homework\kvector\kvector.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="useInitializationList" severity="performance" msg="Variable &apos;begin&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;begin&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="D:/hust-2025-cpp-task/tianweiye/week02/homework/kvector/kvector.cpp">
            <location file="D:\hust-2025-cpp-task\tianweiye\week02\homework\kvector\kvector.h" line="43" column="9"/>
            <symbol>begin</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;end&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;end&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="D:/hust-2025-cpp-task/tianweiye/week02/homework/kvector/kvector.cpp">
            <location file="D:\hust-2025-cpp-task\tianweiye\week02\homework\kvector\kvector.h" line="44" column="9"/>
            <symbol>end</symbol>
        </error>
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;KVector &lt; int &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;KVector &lt; int &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/tianweiye/week02/homework/kvector/kvector.cpp">
            <location file="D:\hust-2025-cpp-task\tianweiye\week02\homework\kvector\kvector.h" line="25" column="9"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;KVector &lt; std :: string &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;KVector &lt; std :: string &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/tianweiye/week02/homework/kvector/kvector.cpp">
            <location file="D:\hust-2025-cpp-task\tianweiye\week02\homework\kvector\kvector.h" line="25" column="9"/>
            <symbol>KVector &lt; std :: string &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/tianweiye/week02/homework/kvector/kvector.cpp">
            <location file="D:\hust-2025-cpp-task\tianweiye\week02\homework\kvector\kvector.h" line="15" column="5"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;iterator&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;iterator&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/tianweiye/week02/homework/kvector/kvector.cpp">
            <location file="D:\hust-2025-cpp-task\tianweiye\week02\homework\kvector\kvector.h" line="169" column="9"/>
            <symbol>iterator</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector &lt; std :: string &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector &lt; std :: string &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/tianweiye/week02/homework/kvector/kvector.cpp">
            <location file="D:\hust-2025-cpp-task\tianweiye\week02\homework\kvector\kvector.h" line="15" column="5"/>
            <symbol>KVector &lt; std :: string &gt;</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="D:/hust-2025-cpp-task/tianweiye/week02/homework/kvector/kvector.cpp">
            <location file="D:\hust-2025-cpp-task\tianweiye\week02\homework\kvector\kvector.cpp" line="32" column="9"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="D:/hust-2025-cpp-task/tianweiye/week02/homework/kvector/kvector.cpp">
            <location file="D:\hust-2025-cpp-task\tianweiye\week02\homework\kvector\kvector.cpp" line="40" column="9"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="D:/hust-2025-cpp-task/tianweiye/week02/homework/kvector/kvector.cpp">
            <location file="D:\hust-2025-cpp-task\tianweiye\week02\homework\kvector\kvector.cpp" line="56" column="9"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="D:/hust-2025-cpp-task/tianweiye/week02/homework/kvector/kvector.cpp">
            <location file="D:\hust-2025-cpp-task\tianweiye\week02\homework\kvector\kvector.cpp" line="68" column="9"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="D:/hust-2025-cpp-task/tianweiye/week02/homework/kvector/kvector.cpp">
            <location file="D:\hust-2025-cpp-task\tianweiye\week02\homework\kvector\kvector.cpp" line="98" column="9"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="D:/hust-2025-cpp-task/tianweiye/week02/homework/kvector/kvector.cpp">
            <location file="D:\hust-2025-cpp-task\tianweiye\week02\homework\kvector\kvector.cpp" line="122" column="9"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="D:/hust-2025-cpp-task/tianweiye/week02/homework/kvector/kvector.cpp">
            <location file="D:\hust-2025-cpp-task\tianweiye\week02\homework\kvector\kvector.cpp" line="134" column="9"/>
        </error>
45/88 files checked 25% done
Checking D:\hust-2025-cpp-task\tuyanchen\week02\homework\week02.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;KVector &lt; int &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;KVector &lt; int &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/tuyanchen/week02/homework/week02.cpp">
            <location file="D:\hust-2025-cpp-task\tuyanchen\week02\homework\week02.cpp" line="18" column="3"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/tuyanchen/week02/homework/week02.cpp">
            <location file="D:\hust-2025-cpp-task\tuyanchen\week02\homework\week02.cpp" line="16" column="2"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;Iterator&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;Iterator&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/tuyanchen/week02/homework/week02.cpp">
            <location file="D:\hust-2025-cpp-task\tuyanchen\week02\homework\week02.cpp" line="146" column="3"/>
            <symbol>Iterator</symbol>
        </error>
46/88 files checked 26% done
Checking D:\hust-2025-cpp-task\wanganmin\week02\homework\KVector.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/wanganmin/week02/homework/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\wanganmin\week02\homework\KVector.cpp" line="17" column="5"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;iterator&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;iterator&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/wanganmin/week02/homework/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\wanganmin\week02\homework\KVector.cpp" line="172" column="9"/>
            <symbol>iterator</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector &lt; std :: string &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector &lt; std :: string &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/wanganmin/week02/homework/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\wanganmin\week02\homework\KVector.cpp" line="17" column="5"/>
            <symbol>KVector &lt; std :: string &gt;</symbol>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;i&lt;size-1&apos; is always false" verbose="Condition &apos;i&lt;size-1&apos; is always false" cwe="570" file0="D:/hust-2025-cpp-task/wanganmin/week02/homework/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\wanganmin\week02\homework\KVector.cpp" line="145" column="34" info="Condition &apos;i&lt;size-1&apos; is always false"/>
            <location file="D:\hust-2025-cpp-task\wanganmin\week02\homework\KVector.cpp" line="148" column="11" info="size is decremented&apos;, new value is 1"/>
            <location file="D:\hust-2025-cpp-task\wanganmin\week02\homework\KVector.cpp" line="151" column="18" info="Assuming that condition &apos;size&gt;0&apos; is not redundant"/>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398" file0="D:/hust-2025-cpp-task/wanganmin/week02/homework/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\wanganmin\week02\homework\KVector.cpp" line="283" column="17" info="Shadow variable"/>
            <location file="D:\hust-2025-cpp-task\wanganmin\week02\homework\KVector.cpp" line="237" column="9" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398" file0="D:/hust-2025-cpp-task/wanganmin/week02/homework/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\wanganmin\week02\homework\KVector.cpp" line="290" column="17" info="Shadow variable"/>
            <location file="D:\hust-2025-cpp-task\wanganmin\week02\homework\KVector.cpp" line="237" column="9" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
        <error id="accessMoved" severity="warning" msg="Access of moved variable &apos;intVector&apos;." verbose="Access of moved variable &apos;intVector&apos;." cwe="672" file0="D:/hust-2025-cpp-task/wanganmin/week02/homework/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\wanganmin\week02\homework\KVector.cpp" line="291" column="22" info="Access of moved variable &apos;intVector&apos;."/>
            <location file="D:\hust-2025-cpp-task\wanganmin\week02\homework\KVector.cpp" line="279" column="32" info="Calling std::move(intVector)"/>
            <symbol>intVector</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;array.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;array.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="D:/hust-2025-cpp-task/wanganmin/week02/homework/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\wanganmin\week02\homework\KVector.cpp" line="223" column="37"/>
            <symbol>array.get()</symbol>
        </error>
47/88 files checked 27% done
Checking D:\hust-2025-cpp-task\wangaoze\week02\homework\homework1\main.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="noOperatorEq" severity="warning" msg="Class &apos;KVector &lt; int &gt;&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;KVector &lt; int &gt;&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/wangaoze/week02/homework/homework1/main.cpp">
            <location file="D:\hust-2025-cpp-task\wangaoze\week02\homework\homework1\KVector.h" line="17" column="4"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/wangaoze/week02/homework/homework1/main.cpp">
            <location file="D:\hust-2025-cpp-task\wangaoze\week02\homework\homework1\KVector.h" line="15" column="2"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
48/88 files checked 27% done
Checking D:\hust-2025-cpp-task\wangchencheng2\week02\homework\kvector\kvector.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
49/88 files checked 27% done
Checking D:\hust-2025-cpp-task\wangchencheng2\week02\homework\kvector\test.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="useInitializationList" severity="performance" msg="Variable &apos;m_data&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;m_data&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="D:/hust-2025-cpp-task/wangchencheng2/week02/homework/kvector/test.cpp">
            <location file="D:\hust-2025-cpp-task\wangchencheng2\week02\homework\kvector\kvector.h" line="143" column="3"/>
            <symbol>m_data</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;kIterator&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;kIterator&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/wangchencheng2/week02/homework/kvector/test.cpp">
            <location file="D:\hust-2025-cpp-task\wangchencheng2\week02\homework\kvector\kvector.h" line="72" column="4"/>
            <symbol>kIterator</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;m_data.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;m_data.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="D:/hust-2025-cpp-task/wangchencheng2/week02/homework/kvector/test.cpp">
            <location file="D:\hust-2025-cpp-task\wangchencheng2\week02\homework\kvector\kvector.h" line="106" column="33"/>
            <symbol>m_data.get()</symbol>
        </error>
50/88 files checked 27% done
Checking D:\hust-2025-cpp-task\wangcungang\week02\homework\Kvector\Kvector\Vector.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="missingReturn" severity="error" msg="Found an exit path from function with non-void return type that has missing return statement" verbose="Found an exit path from function with non-void return type that has missing return statement" cwe="758" file0="D:/hust-2025-cpp-task/wangcungang/week02/homework/Kvector/Kvector/Vector.cpp">
            <location file="D:\hust-2025-cpp-task\wangcungang\week02\homework\Kvector\Kvector\Vector.cpp" line="52" column="4"/>
        </error>
        <error id="missingReturn" severity="error" msg="Found an exit path from function with non-void return type that has missing return statement" verbose="Found an exit path from function with non-void return type that has missing return statement" cwe="758" file0="D:/hust-2025-cpp-task/wangcungang/week02/homework/Kvector/Kvector/Vector.cpp">
            <location file="D:\hust-2025-cpp-task\wangcungang\week02\homework\Kvector\Kvector\Vector.cpp" line="65" column="4"/>
        </error>
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;KVector &lt; int &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;KVector &lt; int &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/wangcungang/week02/homework/Kvector/Kvector/Vector.cpp">
            <location file="D:\hust-2025-cpp-task\wangcungang\week02\homework\Kvector\Kvector\Vector.cpp" line="13" column="42"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="noOperatorEq" severity="warning" msg="Class &apos;KVector &lt; int &gt;&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;KVector &lt; int &gt;&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/wangcungang/week02/homework/Kvector/Kvector/Vector.cpp">
            <location file="D:\hust-2025-cpp-task\wangcungang\week02\homework\Kvector\Kvector\Vector.cpp" line="13" column="42"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
51/88 files checked 28% done
Checking D:\hust-2025-cpp-task\wangziyang\week02\homework\KVector\KVector\KVector.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;iterator::ptr&apos; is not initialized in the constructor." verbose="Member variable &apos;iterator::ptr&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="D:/hust-2025-cpp-task/wangziyang/week02/homework/KVector/KVector/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\wangziyang\week02\homework\KVector\KVector\KVector.h" line="14" column="3"/>
            <symbol>iterator::ptr</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;const_iterator::ptr&apos; is not initialized in the constructor." verbose="Member variable &apos;const_iterator::ptr&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="D:/hust-2025-cpp-task/wangziyang/week02/homework/KVector/KVector/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\wangziyang\week02\homework\KVector\KVector\KVector.h" line="28" column="3"/>
            <symbol>const_iterator::ptr</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/wangziyang/week02/homework/KVector/KVector/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\wangziyang\week02\homework\KVector\KVector\KVector.h" line="42" column="2"/>
            <symbol>KVector</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;iterator&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;iterator&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/wangziyang/week02/homework/KVector/KVector/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\wangziyang\week02\homework\KVector\KVector\KVector.h" line="15" column="3"/>
            <symbol>iterator</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;const_iterator&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;const_iterator&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/wangziyang/week02/homework/KVector/KVector/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\wangziyang\week02\homework\KVector\KVector\KVector.h" line="29" column="3"/>
            <symbol>const_iterator</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;m_start.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;m_start.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="D:/hust-2025-cpp-task/wangziyang/week02/homework/KVector/KVector/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\wangziyang\week02\homework\KVector\KVector\KVector.cpp" line="35" column="28"/>
            <symbol>m_start.get()</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;m_start.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;m_start.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="D:/hust-2025-cpp-task/wangziyang/week02/homework/KVector/KVector/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\wangziyang\week02\homework\KVector\KVector\KVector.cpp" line="36" column="34"/>
            <symbol>m_start.get()</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;m_start.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;m_start.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="D:/hust-2025-cpp-task/wangziyang/week02/homework/KVector/KVector/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\wangziyang\week02\homework\KVector\KVector\KVector.cpp" line="153" column="96"/>
            <symbol>m_start.get()</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;m_start.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;m_start.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="D:/hust-2025-cpp-task/wangziyang/week02/homework/KVector/KVector/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\wangziyang\week02\homework\KVector\KVector\KVector.cpp" line="162" column="96"/>
            <symbol>m_start.get()</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;m_start.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;m_start.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="D:/hust-2025-cpp-task/wangziyang/week02/homework/KVector/KVector/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\wangziyang\week02\homework\KVector\KVector\KVector.cpp" line="179" column="108"/>
            <symbol>m_start.get()</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;m_start.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;m_start.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="D:/hust-2025-cpp-task/wangziyang/week02/homework/KVector/KVector/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\wangziyang\week02\homework\KVector\KVector\KVector.cpp" line="199" column="33"/>
            <symbol>m_start.get()</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;m_start.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;m_start.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="D:/hust-2025-cpp-task/wangziyang/week02/homework/KVector/KVector/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\wangziyang\week02\homework\KVector\KVector\KVector.cpp" line="257" column="28"/>
            <symbol>m_start.get()</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;m_start.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;m_start.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="D:/hust-2025-cpp-task/wangziyang/week02/homework/KVector/KVector/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\wangziyang\week02\homework\KVector\KVector\KVector.cpp" line="258" column="34"/>
            <symbol>m_start.get()</symbol>
        </error>
52/88 files checked 29% done
Checking D:\hust-2025-cpp-task\wangziyang\week02\homework\KVector\KVector\test.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/wangziyang/week02/homework/KVector/KVector/test.cpp">
            <location file="D:\hust-2025-cpp-task\wangziyang\week02\homework\KVector\KVector\KVector.h" line="42" column="2"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;it&apos; can be declared as pointer to const" verbose="Variable &apos;it&apos; can be declared as pointer to const" cwe="398" file0="D:/hust-2025-cpp-task/wangziyang/week02/homework/KVector/KVector/test.cpp">
            <location file="D:\hust-2025-cpp-task\wangziyang\week02\homework\KVector\KVector\test.cpp" line="169" column="10" info="Variable &apos;it&apos; can be declared as pointer to const"/>
            <symbol>it</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="D:/hust-2025-cpp-task/wangziyang/week02/homework/KVector/KVector/test.cpp">
            <location file="D:\hust-2025-cpp-task\wangziyang\week02\homework\KVector\KVector\test.cpp" line="179" column="53"/>
        </error>
53/88 files checked 29% done
Checking D:\hust-2025-cpp-task\wangziyang\week02\homework\KVector_old\KVector\KVector.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;KVector::m_size&apos; is not initialized in the constructor." verbose="Member variable &apos;KVector::m_size&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="D:/hust-2025-cpp-task/wangziyang/week02/homework/KVector_old/KVector/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\wangziyang\week02\homework\KVector_old\KVector\KVector.cpp" line="13" column="13"/>
            <symbol>KVector::m_size</symbol>
        </error>
        <error id="operatorEqVarError" severity="warning" msg="Member variable &apos;KVector::INIT_SIZE&apos; is not assigned a value in &apos;KVector::operator=&apos;." verbose="Member variable &apos;KVector::INIT_SIZE&apos; is not assigned a value in &apos;KVector::operator=&apos;." cwe="398" file0="D:/hust-2025-cpp-task/wangziyang/week02/homework/KVector_old/KVector/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\wangziyang\week02\homework\KVector_old\KVector\KVector.cpp" line="40" column="25"/>
            <symbol>KVector::INIT_SIZE</symbol>
        </error>
        <error id="operatorEqVarError" severity="warning" msg="Member variable &apos;KVector::INIT_SIZE&apos; is not assigned a value in &apos;KVector::operator=&apos;." verbose="Member variable &apos;KVector::INIT_SIZE&apos; is not assigned a value in &apos;KVector::operator=&apos;." cwe="398" file0="D:/hust-2025-cpp-task/wangziyang/week02/homework/KVector_old/KVector/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\wangziyang\week02\homework\KVector_old\KVector\KVector.cpp" line="76" column="25"/>
            <symbol>KVector::INIT_SIZE</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/wangziyang/week02/homework/KVector_old/KVector/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\wangziyang\week02\homework\KVector_old\KVector\KVector.h" line="12" column="2"/>
            <symbol>KVector</symbol>
        </error>
        <error id="shadowFunction" severity="style" msg="Local variable &apos;size&apos; shadows outer function" verbose="Local variable &apos;size&apos; shadows outer function" cwe="398" file0="D:/hust-2025-cpp-task/wangziyang/week02/homework/KVector_old/KVector/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\wangziyang\week02\homework\KVector_old\KVector\KVector.cpp" line="100" column="15" info="Shadow variable"/>
            <location file="D:\hust-2025-cpp-task\wangziyang\week02\homework\KVector_old\KVector\KVector.h" line="39" column="9" info="Shadowed declaration"/>
            <symbol>size</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;size&apos; is assigned a value that is never used." verbose="Variable &apos;size&apos; is assigned a value that is never used." cwe="563" file0="D:/hust-2025-cpp-task/wangziyang/week02/homework/KVector_old/KVector/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\wangziyang\week02\homework\KVector_old\KVector\KVector.cpp" line="100" column="20"/>
            <symbol>size</symbol>
        </error>
54/88 files checked 30% done
Checking D:\hust-2025-cpp-task\wangziyang\week02\homework\KVector_old\KVector\test.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;KVector &lt; int &gt;::m_size&apos; is not initialized in the constructor." verbose="Member variable &apos;KVector &lt; int &gt;::m_size&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="D:/hust-2025-cpp-task/wangziyang/week02/homework/KVector_old/KVector/test.cpp">
            <location file="D:\hust-2025-cpp-task\wangziyang\week02\homework\KVector_old\KVector\KVector.cpp" line="13" column="13"/>
            <symbol>KVector &lt; int &gt;::m_size</symbol>
        </error>
        <error id="operatorEqVarError" severity="warning" msg="Member variable &apos;KVector &lt; int &gt;::INIT_SIZE&apos; is not assigned a value in &apos;KVector &lt; int &gt;::operator=&apos;." verbose="Member variable &apos;KVector &lt; int &gt;::INIT_SIZE&apos; is not assigned a value in &apos;KVector &lt; int &gt;::operator=&apos;." cwe="398" file0="D:/hust-2025-cpp-task/wangziyang/week02/homework/KVector_old/KVector/test.cpp">
            <location file="D:\hust-2025-cpp-task\wangziyang\week02\homework\KVector_old\KVector\KVector.cpp" line="40" column="25"/>
            <symbol>KVector &lt; int &gt;::INIT_SIZE</symbol>
        </error>
        <error id="operatorEqVarError" severity="warning" msg="Member variable &apos;KVector &lt; int &gt;::INIT_SIZE&apos; is not assigned a value in &apos;KVector &lt; int &gt;::operator=&apos;." verbose="Member variable &apos;KVector &lt; int &gt;::INIT_SIZE&apos; is not assigned a value in &apos;KVector &lt; int &gt;::operator=&apos;." cwe="398" file0="D:/hust-2025-cpp-task/wangziyang/week02/homework/KVector_old/KVector/test.cpp">
            <location file="D:\hust-2025-cpp-task\wangziyang\week02\homework\KVector_old\KVector\KVector.cpp" line="76" column="25"/>
            <symbol>KVector &lt; int &gt;::INIT_SIZE</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/wangziyang/week02/homework/KVector_old/KVector/test.cpp">
            <location file="D:\hust-2025-cpp-task\wangziyang\week02\homework\KVector_old\KVector\KVector.h" line="12" column="2"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
55/88 files checked 30% done
Checking D:\hust-2025-cpp-task\wenlin\week02\homework\KVector\testKVector.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;KVectorIterator &lt; false &gt;::m_vector&apos; is not initialized in the constructor." verbose="Member variable &apos;KVectorIterator &lt; false &gt;::m_vector&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="D:/hust-2025-cpp-task/wenlin/week02/homework/KVector/testKVector.cpp">
            <location file="D:\hust-2025-cpp-task\wenlin\week02\homework\KVector\KVector.h" line="58" column="3"/>
            <symbol>KVectorIterator &lt; false &gt;::m_vector</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;KVectorIterator &lt; false &gt;::m_pos&apos; is not initialized in the constructor." verbose="Member variable &apos;KVectorIterator &lt; false &gt;::m_pos&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="D:/hust-2025-cpp-task/wenlin/week02/homework/KVector/testKVector.cpp">
            <location file="D:\hust-2025-cpp-task\wenlin\week02\homework\KVector\KVector.h" line="58" column="3"/>
            <symbol>KVectorIterator &lt; false &gt;::m_pos</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;KVectorIterator &lt; false &gt;::m_vector&apos; is not initialized in the constructor." verbose="Member variable &apos;KVectorIterator &lt; false &gt;::m_vector&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="D:/hust-2025-cpp-task/wenlin/week02/homework/KVector/testKVector.cpp">
            <location file="D:\hust-2025-cpp-task\wenlin\week02\homework\KVector\KVector.h" line="59" column="3"/>
            <symbol>KVectorIterator &lt; false &gt;::m_vector</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;KVectorIterator &lt; false &gt;::m_pos&apos; is not initialized in the constructor." verbose="Member variable &apos;KVectorIterator &lt; false &gt;::m_pos&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="D:/hust-2025-cpp-task/wenlin/week02/homework/KVector/testKVector.cpp">
            <location file="D:\hust-2025-cpp-task\wenlin\week02\homework\KVector\KVector.h" line="59" column="3"/>
            <symbol>KVectorIterator &lt; false &gt;::m_pos</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;KVectorIterator &lt; true &gt;::m_vector&apos; is not initialized in the constructor." verbose="Member variable &apos;KVectorIterator &lt; true &gt;::m_vector&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="D:/hust-2025-cpp-task/wenlin/week02/homework/KVector/testKVector.cpp">
            <location file="D:\hust-2025-cpp-task\wenlin\week02\homework\KVector\KVector.h" line="58" column="3"/>
            <symbol>KVectorIterator &lt; true &gt;::m_vector</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;KVectorIterator &lt; true &gt;::m_pos&apos; is not initialized in the constructor." verbose="Member variable &apos;KVectorIterator &lt; true &gt;::m_pos&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="D:/hust-2025-cpp-task/wenlin/week02/homework/KVector/testKVector.cpp">
            <location file="D:\hust-2025-cpp-task\wenlin\week02\homework\KVector\KVector.h" line="58" column="3"/>
            <symbol>KVectorIterator &lt; true &gt;::m_pos</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;KVectorIterator &lt; true &gt;::m_vector&apos; is not initialized in the constructor." verbose="Member variable &apos;KVectorIterator &lt; true &gt;::m_vector&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="D:/hust-2025-cpp-task/wenlin/week02/homework/KVector/testKVector.cpp">
            <location file="D:\hust-2025-cpp-task\wenlin\week02\homework\KVector\KVector.h" line="59" column="3"/>
            <symbol>KVectorIterator &lt; true &gt;::m_vector</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;KVectorIterator &lt; true &gt;::m_pos&apos; is not initialized in the constructor." verbose="Member variable &apos;KVectorIterator &lt; true &gt;::m_pos&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="D:/hust-2025-cpp-task/wenlin/week02/homework/KVector/testKVector.cpp">
            <location file="D:\hust-2025-cpp-task\wenlin\week02\homework\KVector\KVector.h" line="59" column="3"/>
            <symbol>KVectorIterator &lt; true &gt;::m_pos</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;m_container&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;m_container&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="D:/hust-2025-cpp-task/wenlin/week02/homework/KVector/testKVector.cpp">
            <location file="D:\hust-2025-cpp-task\wenlin\week02\homework\KVector\KVectorThread.h" line="26" column="3"/>
            <symbol>m_container</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVectorThread&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVectorThread&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/wenlin/week02/homework/KVector/testKVector.cpp">
            <location file="D:\hust-2025-cpp-task\wenlin\week02\homework\KVector\KVectorThread.h" line="15" column="2"/>
            <symbol>KVectorThread</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/wenlin/week02/homework/KVector/testKVector.cpp">
            <location file="D:\hust-2025-cpp-task\wenlin\week02\homework\KVector\KVector.h" line="15" column="2"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector &lt; std :: thread &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector &lt; std :: thread &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/wenlin/week02/homework/KVector/testKVector.cpp">
            <location file="D:\hust-2025-cpp-task\wenlin\week02\homework\KVector\KVector.h" line="15" column="2"/>
            <symbol>KVector &lt; std :: thread &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVectorIterator &lt; false &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVectorIterator &lt; false &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/wenlin/week02/homework/KVector/testKVector.cpp">
            <location file="D:\hust-2025-cpp-task\wenlin\week02\homework\KVector\KVector.h" line="58" column="3"/>
            <symbol>KVectorIterator &lt; false &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVectorIterator &lt; false &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVectorIterator &lt; false &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/wenlin/week02/homework/KVector/testKVector.cpp">
            <location file="D:\hust-2025-cpp-task\wenlin\week02\homework\KVector\KVector.h" line="59" column="3"/>
            <symbol>KVectorIterator &lt; false &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVectorIterator &lt; true &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVectorIterator &lt; true &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/wenlin/week02/homework/KVector/testKVector.cpp">
            <location file="D:\hust-2025-cpp-task\wenlin\week02\homework\KVector\KVector.h" line="58" column="3"/>
            <symbol>KVectorIterator &lt; true &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVectorIterator &lt; true &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVectorIterator &lt; true &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/wenlin/week02/homework/KVector/testKVector.cpp">
            <location file="D:\hust-2025-cpp-task\wenlin\week02\homework\KVector\KVector.h" line="59" column="3"/>
            <symbol>KVectorIterator &lt; true &gt;</symbol>
        </error>
        <error id="unsignedPositive" severity="style" msg="Unsigned expression &apos;index&apos; can&apos;t be negative so it is unnecessary to test it." verbose="Unsigned expression &apos;index&apos; can&apos;t be negative so it is unnecessary to test it." cwe="570" file0="D:/hust-2025-cpp-task/wenlin/week02/homework/KVector/testKVector.cpp">
            <location file="D:\hust-2025-cpp-task\wenlin\week02\homework\KVector\KVector.h" line="455" column="15" info="Unsigned positive"/>
            <symbol>index</symbol>
        </error>
        <error id="constStatement" severity="warning" msg="Unused variable value &apos;i&apos;" verbose="Unused variable value &apos;i&apos;" cwe="398" file0="D:/hust-2025-cpp-task/wenlin/week02/homework/KVector/testKVector.cpp">
            <location file="D:\hust-2025-cpp-task\wenlin\week02\homework\KVector\KVector.h" line="157" column="20"/>
        </error>
        <error id="constStatement" severity="warning" msg="Unused variable value &apos;i&apos;" verbose="Unused variable value &apos;i&apos;" cwe="398" file0="D:/hust-2025-cpp-task/wenlin/week02/homework/KVector/testKVector.cpp">
            <location file="D:\hust-2025-cpp-task\wenlin\week02\homework\KVector\KVector.h" line="147" column="20"/>
        </error>
        <error id="constParameterReference" severity="style" msg="Parameter &apos;container&apos; can be declared as reference to const" verbose="Parameter &apos;container&apos; can be declared as reference to const" cwe="398" file0="D:/hust-2025-cpp-task/wenlin/week02/homework/KVector/testKVector.cpp">
            <location file="D:\hust-2025-cpp-task\wenlin\week02\homework\KVector\testKVector.cpp" line="119" column="47" info="Parameter &apos;container&apos; can be declared as reference to const"/>
            <symbol>container</symbol>
        </error>
        <error id="constVariableReference" severity="style" msg="Variable &apos;elem&apos; can be declared as reference to const" verbose="Variable &apos;elem&apos; can be declared as reference to const" cwe="398" file0="D:/hust-2025-cpp-task/wenlin/week02/homework/KVector/testKVector.cpp">
            <location file="D:\hust-2025-cpp-task\wenlin\week02\homework\KVector\KVector.h" line="231" column="13" info="Variable &apos;elem&apos; can be declared as reference to const"/>
            <symbol>elem</symbol>
        </error>
56/88 files checked 31% done
Checking D:\hust-2025-cpp-task\wenlin\week02\homework\UnitTestForKVector\UnitTestForKVector.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="syntaxError" severity="error" msg="syntax error" verbose="syntax error" file0="D:/hust-2025-cpp-task/wenlin/week02/homework/UnitTestForKVector/UnitTestForKVector.cpp">
            <location file="D:\hust-2025-cpp-task\wenlin\week02\homework\UnitTestForKVector\UnitTestForKVector.cpp" line="24" column="3"/>
        </error>
57/88 files checked 32% done
Checking D:\hust-2025-cpp-task\wenlin\week02\homework\UnitTestForKVector\pch.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
58/88 files checked 32% done
Checking D:\hust-2025-cpp-task\wutao\week02\homework\test.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;KVector &lt; int , Allocator &lt; int &gt; &gt;::ptr&apos; is not initialized in the constructor." verbose="Member variable &apos;KVector &lt; int , Allocator &lt; int &gt; &gt;::ptr&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="D:/hust-2025-cpp-task/wutao/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\wutao\week02\homework\KVector.h" line="72" column="5"/>
            <symbol>KVector &lt; int , Allocator &lt; int &gt; &gt;::ptr</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;KVector &lt; int , Allocator &lt; int &gt; &gt;::ptr&apos; is not initialized in the constructor." verbose="Member variable &apos;KVector &lt; int , Allocator &lt; int &gt; &gt;::ptr&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="D:/hust-2025-cpp-task/wutao/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\wutao\week02\homework\KVector.h" line="77" column="5"/>
            <symbol>KVector &lt; int , Allocator &lt; int &gt; &gt;::ptr</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;KVector &lt; int , Allocator &lt; int &gt; &gt;::ptr&apos; is not initialized in the move constructor." verbose="Member variable &apos;KVector &lt; int , Allocator &lt; int &gt; &gt;::ptr&apos; is not initialized in the move constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="D:/hust-2025-cpp-task/wutao/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\wutao\week02\homework\KVector.h" line="91" column="5"/>
            <symbol>KVector &lt; int , Allocator &lt; int &gt; &gt;::ptr</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;KVector &lt; int , Allocator &lt; int &gt; &gt;::ptr&apos; is not initialized in the copy constructor." verbose="Member variable &apos;KVector &lt; int , Allocator &lt; int &gt; &gt;::ptr&apos; is not initialized in the copy constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="D:/hust-2025-cpp-task/wutao/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\wutao\week02\homework\KVector.h" line="103" column="5"/>
            <symbol>KVector &lt; int , Allocator &lt; int &gt; &gt;::ptr</symbol>
        </error>
        <error id="operatorEqVarError" severity="warning" msg="Member variable &apos;KVector &lt; int , Allocator &lt; int &gt; &gt;::ptr&apos; is not assigned a value in &apos;KVector &lt; int , Allocator &lt; int &gt; &gt;::operator=&apos;." verbose="Member variable &apos;KVector &lt; int , Allocator &lt; int &gt; &gt;::ptr&apos; is not assigned a value in &apos;KVector &lt; int , Allocator &lt; int &gt; &gt;::operator=&apos;." cwe="398" file0="D:/hust-2025-cpp-task/wutao/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\wutao\week02\homework\KVector.h" line="114" column="14"/>
            <symbol>KVector &lt; int , Allocator &lt; int &gt; &gt;::ptr</symbol>
        </error>
        <error id="operatorEqVarError" severity="warning" msg="Member variable &apos;KVector &lt; int , Allocator &lt; int &gt; &gt;::ptr&apos; is not assigned a value in &apos;KVector &lt; int , Allocator &lt; int &gt; &gt;::operator=&apos;." verbose="Member variable &apos;KVector &lt; int , Allocator &lt; int &gt; &gt;::ptr&apos; is not assigned a value in &apos;KVector &lt; int , Allocator &lt; int &gt; &gt;::operator=&apos;." cwe="398" file0="D:/hust-2025-cpp-task/wutao/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\wutao\week02\homework\KVector.h" line="132" column="14"/>
            <symbol>KVector &lt; int , Allocator &lt; int &gt; &gt;::ptr</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;KVector &lt; int , Allocator &lt; int &gt; &gt;::ptr&apos; is not initialized in the constructor." verbose="Member variable &apos;KVector &lt; int , Allocator &lt; int &gt; &gt;::ptr&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="D:/hust-2025-cpp-task/wutao/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\wutao\week02\homework\KVector.h" line="148" column="5"/>
            <symbol>KVector &lt; int , Allocator &lt; int &gt; &gt;::ptr</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector &lt; int , Allocator &lt; int &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector &lt; int , Allocator &lt; int &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/wutao/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\wutao\week02\homework\KVector.h" line="77" column="5"/>
            <symbol>KVector &lt; int , Allocator &lt; int &gt; &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;Iterator&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;Iterator&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/wutao/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\wutao\week02\homework\KVector.h" line="48" column="9"/>
            <symbol>Iterator</symbol>
        </error>
Checking D:\hust-2025-cpp-task\wutao\week02\homework\test.cpp: TEST_EXCEPTION...
59/88 files checked 32% done
Checking D:\hust-2025-cpp-task\xingqingbin\week02\homework\main.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="returnReference" severity="error" msg="Reference to local variable returned." verbose="Reference to local variable returned." cwe="562" file0="D:/hust-2025-cpp-task/xingqingbin/week02/homework/main.cpp">
            <location file="D:\hust-2025-cpp-task\xingqingbin\week02\homework\vector.h" line="41" column="10"/>
        </error>
        <error id="returnReference" severity="error" msg="Reference to local variable returned." verbose="Reference to local variable returned." cwe="562" file0="D:/hust-2025-cpp-task/xingqingbin/week02/homework/main.cpp">
            <location file="D:\hust-2025-cpp-task\xingqingbin\week02\homework\vector.h" line="54" column="10"/>
        </error>
        <error id="operatorEqMissingReturnStatement" severity="error" msg="No &apos;return&apos; statement in non-void function causes undefined behavior." verbose="No &apos;return&apos; statement in non-void function causes undefined behavior." cwe="398" file0="D:/hust-2025-cpp-task/xingqingbin/week02/homework/main.cpp">
            <location file="D:\hust-2025-cpp-task\xingqingbin\week02\homework\vector.h" line="115" column="10"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;Vector3&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;Vector3&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/xingqingbin/week02/homework/main.cpp">
            <location file="D:\hust-2025-cpp-task\xingqingbin\week02\homework\main.cpp" line="25" column="2"/>
            <symbol>Vector3</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;VectorIterator &lt; Vector &lt; int &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;VectorIterator &lt; Vector &lt; int &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/xingqingbin/week02/homework/main.cpp">
            <location file="D:\hust-2025-cpp-task\xingqingbin\week02\homework\vector.h" line="11" column="2"/>
            <symbol>VectorIterator &lt; Vector &lt; int &gt; &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;VectorIterator &lt; Vector &lt; Vector3 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;VectorIterator &lt; Vector &lt; Vector3 &gt; &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/xingqingbin/week02/homework/main.cpp">
            <location file="D:\hust-2025-cpp-task\xingqingbin\week02\homework\vector.h" line="11" column="2"/>
            <symbol>VectorIterator &lt; Vector &lt; Vector3 &gt; &gt;</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="D:/hust-2025-cpp-task/xingqingbin/week02/homework/main.cpp">
            <location file="D:\hust-2025-cpp-task\xingqingbin\week02\homework\main.cpp" line="129" column="76"/>
        </error>
60/88 files checked 33% done
Checking D:\hust-2025-cpp-task\yangxiangyu\week02\homework\main.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/yangxiangyu/week02/homework/main.cpp">
            <location file="D:\hust-2025-cpp-task\yangxiangyu\week02\homework\KVector.h" line="124" column="2"/>
            <symbol>KVector</symbol>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;n&apos; is less than zero." verbose="The unsigned expression &apos;n&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="D:/hust-2025-cpp-task/yangxiangyu/week02/homework/main.cpp">
            <location file="D:\hust-2025-cpp-task\yangxiangyu\week02\homework\KVector.h" line="287" column="8" info="Unsigned less than zero"/>
            <symbol>n</symbol>
        </error>
        <error id="shadowFunction" severity="style" msg="Local variable &apos;size&apos; shadows outer function" verbose="Local variable &apos;size&apos; shadows outer function" cwe="398" file0="D:/hust-2025-cpp-task/yangxiangyu/week02/homework/main.cpp">
            <location file="D:\hust-2025-cpp-task\yangxiangyu\week02\homework\KVector.h" line="149" column="10" info="Shadow variable"/>
            <location file="D:\hust-2025-cpp-task\yangxiangyu\week02\homework\KVector.h" line="207" column="9" info="Shadowed declaration"/>
            <symbol>size</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;_capacity&apos; shadows outer variable" verbose="Local variable &apos;_capacity&apos; shadows outer variable" cwe="398" file0="D:/hust-2025-cpp-task/yangxiangyu/week02/homework/main.cpp">
            <location file="D:\hust-2025-cpp-task\yangxiangyu\week02\homework\KVector.h" line="315" column="10" info="Shadow variable"/>
            <location file="D:\hust-2025-cpp-task\yangxiangyu\week02\homework\KVector.h" line="232" column="9" info="Shadowed declaration"/>
            <symbol>_capacity</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;_capacity&apos; shadows outer variable" verbose="Local variable &apos;_capacity&apos; shadows outer variable" cwe="398" file0="D:/hust-2025-cpp-task/yangxiangyu/week02/homework/main.cpp">
            <location file="D:\hust-2025-cpp-task\yangxiangyu\week02\homework\KVector.h" line="338" column="10" info="Shadow variable"/>
            <location file="D:\hust-2025-cpp-task\yangxiangyu\week02\homework\KVector.h" line="232" column="9" info="Shadowed declaration"/>
            <symbol>_capacity</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;ptr.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;ptr.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="D:/hust-2025-cpp-task/yangxiangyu/week02/homework/main.cpp">
            <location file="D:\hust-2025-cpp-task\yangxiangyu\week02\homework\KVector.h" line="12" column="80"/>
            <symbol>ptr.get()</symbol>
        </error>
        <error id="signConversion" severity="warning" msg="Expression &apos;-1&apos; has a negative value. That is converted to an unsigned value and used in an unsigned calculation." verbose="Expression &apos;-1&apos; has a negative value. That is converted to an unsigned value and used in an unsigned calculation." cwe="195" file0="D:/hust-2025-cpp-task/yangxiangyu/week02/homework/main.cpp">
            <location file="D:\hust-2025-cpp-task\yangxiangyu\week02\homework\KVector.h" line="90" column="12" info="Negative value is converted to an unsigned value"/>
        </error>
61/88 files checked 33% done
Checking D:\hust-2025-cpp-task\yangxiangyu\week02\homework\test.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/yangxiangyu/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\yangxiangyu\week02\homework\KVector.h" line="124" column="2"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;!=&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398" file0="D:/hust-2025-cpp-task/yangxiangyu/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\yangxiangyu\week02\homework\test.cpp" line="30" column="55"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="The comparison &apos;vec2.size() != vec.size()&apos; is always false because &apos;vec2.size()&apos; and &apos;vec.size()&apos; represent the same value." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398" file0="D:/hust-2025-cpp-task/yangxiangyu/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\yangxiangyu\week02\homework\test.cpp" line="82" column="21"/>
            <location file="D:\hust-2025-cpp-task\yangxiangyu\week02\homework\test.cpp" line="81" column="12" info="&apos;vec2&apos; is assigned value &apos;vec&apos; here."/>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;_data.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;_data.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="D:/hust-2025-cpp-task/yangxiangyu/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\yangxiangyu\week02\homework\KVector.h" line="145" column="38"/>
            <symbol>_data.get()</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;vec._data.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;vec._data.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="D:/hust-2025-cpp-task/yangxiangyu/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\yangxiangyu\week02\homework\KVector.h" line="174" column="46"/>
            <symbol>vec._data.get()</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;vec._data.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;vec._data.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="D:/hust-2025-cpp-task/yangxiangyu/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\yangxiangyu\week02\homework\KVector.h" line="262" column="46"/>
            <symbol>vec._data.get()</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;this-&gt;_data.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;this-&gt;_data.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="D:/hust-2025-cpp-task/yangxiangyu/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\yangxiangyu\week02\homework\KVector.h" line="304" column="51"/>
            <symbol>this-&gt;_data.get()</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;_data.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;_data.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="D:/hust-2025-cpp-task/yangxiangyu/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\yangxiangyu\week02\homework\KVector.h" line="343" column="33"/>
            <symbol>_data.get()</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;_data.get()+size()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;_data.get()+size()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="D:/hust-2025-cpp-task/yangxiangyu/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\yangxiangyu\week02\homework\KVector.h" line="343" column="88"/>
            <symbol>_data.get()+size()</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;_data.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;_data.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="D:/hust-2025-cpp-task/yangxiangyu/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\yangxiangyu\week02\homework\KVector.h" line="354" column="24"/>
            <symbol>_data.get()</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;_data.get()+distance&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;_data.get()+distance&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="D:/hust-2025-cpp-task/yangxiangyu/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\yangxiangyu\week02\homework\KVector.h" line="354" column="35"/>
            <symbol>_data.get()+distance</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;_data.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;_data.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="D:/hust-2025-cpp-task/yangxiangyu/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\yangxiangyu\week02\homework\KVector.h" line="365" column="24"/>
            <symbol>_data.get()</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;this-&gt;_data.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;this-&gt;_data.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="D:/hust-2025-cpp-task/yangxiangyu/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\yangxiangyu\week02\homework\KVector.h" line="383" column="50"/>
            <symbol>this-&gt;_data.get()</symbol>
        </error>
62/88 files checked 33% done
Checking D:\hust-2025-cpp-task\yukuai\week02\homework\Homework\KVector\test.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="operatorEqToSelf" severity="warning" msg="&apos;operator=&apos; should check for assignment to self to avoid problems with dynamic memory." verbose="&apos;operator=&apos; should check for assignment to self to ensure that each block of dynamically allocated memory is owned and managed by only one instance of the class." cwe="398" file0="D:/hust-2025-cpp-task/yukuai/week02/homework/Homework/KVector/test.cpp">
            <location file="D:\hust-2025-cpp-task\yukuai\week02\homework\Homework\KVector\test_object.h" line="37" column="11"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/yukuai/week02/homework/Homework/KVector/test.cpp">
            <location file="D:\hust-2025-cpp-task\yukuai\week02\homework\Homework\KVector\kvector_decl.h" line="15" column="2"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVectorIterator &lt; ObjectA &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVectorIterator &lt; ObjectA &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/yukuai/week02/homework/Homework/KVector/test.cpp">
            <location file="D:\hust-2025-cpp-task\yukuai\week02\homework\Homework\KVector\kvector_iterator.h" line="9" column="2"/>
            <symbol>KVectorIterator &lt; ObjectA &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVectorIterator &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVectorIterator &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/yukuai/week02/homework/Homework/KVector/test.cpp">
            <location file="D:\hust-2025-cpp-task\yukuai\week02\homework\Homework\KVector\kvector_iterator.h" line="9" column="2"/>
            <symbol>KVectorIterator &lt; int &gt;</symbol>
        </error>
        <error id="throwInNoexceptFunction" severity="error" msg="Exception thrown in function declared not to throw exceptions." verbose="Exception thrown in function declared not to throw exceptions." cwe="398" file0="D:/hust-2025-cpp-task/yukuai/week02/homework/Homework/KVector/test.cpp">
            <location file="D:\hust-2025-cpp-task\yukuai\week02\homework\Homework\KVector\kvector.h" line="102" column="4"/>
        </error>
        <error id="constParameterReference" severity="style" msg="Parameter &apos;ele&apos; can be declared as reference to const" verbose="Parameter &apos;ele&apos; can be declared as reference to const" cwe="398" file0="D:/hust-2025-cpp-task/yukuai/week02/homework/Homework/KVector/test.cpp">
            <location file="D:\hust-2025-cpp-task\yukuai\week02\homework\Homework\KVector\kvector.h" line="209" column="42" info="Parameter &apos;ele&apos; can be declared as reference to const"/>
            <symbol>ele</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="D:/hust-2025-cpp-task/yukuai/week02/homework/Homework/KVector/test.cpp">
            <location file="D:\hust-2025-cpp-task\yukuai\week02\homework\Homework\KVector\test.cpp" line="128" column="67"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="D:/hust-2025-cpp-task/yukuai/week02/homework/Homework/KVector/test.cpp">
            <location file="D:\hust-2025-cpp-task\yukuai\week02\homework\Homework\KVector\test.cpp" line="132" column="67"/>
        </error>
63/88 files checked 34% done
Checking D:\hust-2025-cpp-task\yukuai\week02\homework\Homework\KVector_2\test.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="operatorEqToSelf" severity="warning" msg="&apos;operator=&apos; should check for assignment to self to avoid problems with dynamic memory." verbose="&apos;operator=&apos; should check for assignment to self to ensure that each block of dynamically allocated memory is owned and managed by only one instance of the class." cwe="398" file0="D:/hust-2025-cpp-task/yukuai/week02/homework/Homework/KVector_2/test.cpp">
            <location file="D:\hust-2025-cpp-task\yukuai\week02\homework\Homework\KVector_2\test_object.h" line="37" column="11"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/yukuai/week02/homework/Homework/KVector_2/test.cpp">
            <location file="D:\hust-2025-cpp-task\yukuai\week02\homework\Homework\KVector_2\kvector_decl.h" line="15" column="2"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVectorIterator &lt; ObjectA &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVectorIterator &lt; ObjectA &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/yukuai/week02/homework/Homework/KVector_2/test.cpp">
            <location file="D:\hust-2025-cpp-task\yukuai\week02\homework\Homework\KVector_2\kvector_iterator.h" line="10" column="2"/>
            <symbol>KVectorIterator &lt; ObjectA &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVectorIterator &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVectorIterator &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/yukuai/week02/homework/Homework/KVector_2/test.cpp">
            <location file="D:\hust-2025-cpp-task\yukuai\week02\homework\Homework\KVector_2\kvector_iterator.h" line="10" column="2"/>
            <symbol>KVectorIterator &lt; int &gt;</symbol>
        </error>
        <error id="throwInNoexceptFunction" severity="error" msg="Exception thrown in function declared not to throw exceptions." verbose="Exception thrown in function declared not to throw exceptions." cwe="398" file0="D:/hust-2025-cpp-task/yukuai/week02/homework/Homework/KVector_2/test.cpp">
            <location file="D:\hust-2025-cpp-task\yukuai\week02\homework\Homework\KVector_2\kvector.h" line="101" column="4"/>
        </error>
        <error id="constParameterReference" severity="style" msg="Parameter &apos;ele&apos; can be declared as reference to const" verbose="Parameter &apos;ele&apos; can be declared as reference to const" cwe="398" file0="D:/hust-2025-cpp-task/yukuai/week02/homework/Homework/KVector_2/test.cpp">
            <location file="D:\hust-2025-cpp-task\yukuai\week02\homework\Homework\KVector_2\kvector.h" line="200" column="42" info="Parameter &apos;ele&apos; can be declared as reference to const"/>
            <symbol>ele</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;m_array.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;m_array.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="D:/hust-2025-cpp-task/yukuai/week02/homework/Homework/KVector_2/test.cpp">
            <location file="D:\hust-2025-cpp-task\yukuai\week02\homework\Homework\KVector_2\kvector.h" line="305" column="42"/>
            <symbol>m_array.get()</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="D:/hust-2025-cpp-task/yukuai/week02/homework/Homework/KVector_2/test.cpp">
            <location file="D:\hust-2025-cpp-task\yukuai\week02\homework\Homework\KVector_2\test.cpp" line="128" column="67"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="D:/hust-2025-cpp-task/yukuai/week02/homework/Homework/KVector_2/test.cpp">
            <location file="D:\hust-2025-cpp-task\yukuai\week02\homework\Homework\KVector_2\test.cpp" line="132" column="67"/>
        </error>
64/88 files checked 34% done
Checking D:\hust-2025-cpp-task\zhangjincheng2\week02\homework\KVector.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;KVector &lt; char &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;KVector &lt; char &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/zhangjincheng2/week02/homework/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\zhangjincheng2\week02\homework\KVector.cpp" line="31" column="5"/>
            <symbol>KVector &lt; char &gt;</symbol>
        </error>
        <error id="noOperatorEq" severity="warning" msg="Class &apos;KVector &lt; char &gt;&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;KVector &lt; char &gt;&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/zhangjincheng2/week02/homework/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\zhangjincheng2\week02\homework\KVector.cpp" line="31" column="5"/>
            <symbol>KVector &lt; char &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector &lt; char &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector &lt; char &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/zhangjincheng2/week02/homework/KVector.cpp">
            <location file="D:\hust-2025-cpp-task\zhangjincheng2\week02\homework\KVector.h" line="15" column="5"/>
            <symbol>KVector &lt; char &gt;</symbol>
        </error>
65/88 files checked 35% done
Checking D:\hust-2025-cpp-task\zhangjincheng2\week02\homework\main.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
66/88 files checked 35% done
Checking D:\hust-2025-cpp-task\zhanglinhai\week02\homework\kvector\main.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;KVector &lt; int &gt;::first&apos; is not initialized in the constructor." verbose="Member variable &apos;KVector &lt; int &gt;::first&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="D:/hust-2025-cpp-task/zhanglinhai/week02/homework/kvector/main.cpp">
            <location file="D:\hust-2025-cpp-task\zhanglinhai\week02\homework\kvector\kvector.h" line="44" column="2"/>
            <symbol>KVector &lt; int &gt;::first</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;KVector &lt; int &gt;::last&apos; is not initialized in the constructor." verbose="Member variable &apos;KVector &lt; int &gt;::last&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="D:/hust-2025-cpp-task/zhanglinhai/week02/homework/kvector/main.cpp">
            <location file="D:\hust-2025-cpp-task\zhanglinhai\week02\homework\kvector\kvector.h" line="44" column="2"/>
            <symbol>KVector &lt; int &gt;::last</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;KVector &lt; int &gt;::end&apos; is not initialized in the constructor." verbose="Member variable &apos;KVector &lt; int &gt;::end&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="D:/hust-2025-cpp-task/zhanglinhai/week02/homework/kvector/main.cpp">
            <location file="D:\hust-2025-cpp-task\zhanglinhai\week02\homework\kvector\kvector.h" line="44" column="2"/>
            <symbol>KVector &lt; int &gt;::end</symbol>
        </error>
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;KVector &lt; int &gt;&apos; has dynamic memory/resource allocation(s). The copy constructor is explicitly defaulted but the default copy constructor does not work well. It is recommended to define or delete the copy constructor." verbose="Class &apos;KVector &lt; int &gt;&apos; has dynamic memory/resource allocation(s). The copy constructor is explicitly defaulted but the default copy constructor does not work well. It is recommended to define or delete the copy constructor." cwe="398" file0="D:/hust-2025-cpp-task/zhanglinhai/week02/homework/kvector/main.cpp">
            <location file="D:\hust-2025-cpp-task\zhanglinhai\week02\homework\kvector\kvector.h" line="48" column="3"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="noOperatorEq" severity="warning" msg="Class &apos;KVector &lt; int &gt;&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;KVector &lt; int &gt;&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/zhanglinhai/week02/homework/kvector/main.cpp">
            <location file="D:\hust-2025-cpp-task\zhanglinhai\week02\homework\kvector\kvector.h" line="48" column="3"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/zhanglinhai/week02/homework/kvector/main.cpp">
            <location file="D:\hust-2025-cpp-task\zhanglinhai\week02\homework\kvector\kvector.h" line="46" column="2"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="mismatchAllocDealloc" severity="error" msg="Mismatching allocation and deallocation: KVector &lt; int &gt;::first" verbose="Mismatching allocation and deallocation: KVector &lt; int &gt;::first" cwe="762" file0="D:/hust-2025-cpp-task/zhanglinhai/week02/homework/kvector/main.cpp">
            <location file="D:\hust-2025-cpp-task\zhanglinhai\week02\homework\kvector\kvector.h" line="72" column="5"/>
            <symbol>KVector &lt; int &gt;::first</symbol>
        </error>
67/88 files checked 35% done
Checking D:\hust-2025-cpp-task\zhangziang\week02\homework\test.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="noCopyConstructor" severity="warning" msg="Struct &apos;Pool&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Struct &apos;Pool&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/zhangziang/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\zhangziang\week02\homework\MyAllocator.h" line="18" column="18"/>
            <symbol>Pool</symbol>
        </error>
        <error id="noOperatorEq" severity="warning" msg="Struct &apos;Pool&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Struct &apos;Pool&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/zhangziang/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\zhangziang\week02\homework\MyAllocator.h" line="18" column="18"/>
            <symbol>Pool</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;Iterator&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;Iterator&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/zhangziang/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\zhangziang\week02\homework\KVector.h" line="173" column="9"/>
            <symbol>Iterator</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;ptr&apos; can be declared as pointer to const" verbose="Parameter &apos;ptr&apos; can be declared as pointer to const" cwe="398" file0="D:/hust-2025-cpp-task/zhangziang/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\zhangziang\week02\homework\MyAllocator.h" line="60" column="24" info="Parameter &apos;ptr&apos; can be declared as pointer to const"/>
            <symbol>ptr</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;bitArray.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;bitArray.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="D:/hust-2025-cpp-task/zhangziang/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\zhangziang\week02\homework\KVector.h" line="244" column="54"/>
            <symbol>bitArray.get()</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;other.bitArray.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;other.bitArray.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="D:/hust-2025-cpp-task/zhangziang/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\zhangziang\week02\homework\KVector.h" line="286" column="62"/>
            <symbol>other.bitArray.get()</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;other.bitArray.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;other.bitArray.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="D:/hust-2025-cpp-task/zhangziang/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\zhangziang\week02\homework\KVector.h" line="294" column="66"/>
            <symbol>other.bitArray.get()</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;bitArray.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;bitArray.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="D:/hust-2025-cpp-task/zhangziang/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\zhangziang\week02\homework\KVector.h" line="428" column="40"/>
            <symbol>bitArray.get()</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;arr.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;arr.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="D:/hust-2025-cpp-task/zhangziang/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\zhangziang\week02\homework\KVector.h" line="37" column="44"/>
            <symbol>arr.get()</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;arr.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;arr.get()&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="D:/hust-2025-cpp-task/zhangziang/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\zhangziang\week02\homework\KVector.h" line="212" column="35"/>
            <symbol>arr.get()</symbol>
        </error>
68/88 files checked 36% done
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\src\kvector.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
69/88 files checked 37% done
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-all.cc ...
Defines:
Undefines:
Includes:
Platform:win64
70/88 files checked 37% done
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-assertion-result.cc ...
Defines:
Undefines:
Includes:
Platform:win64
71/88 files checked 38% done
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-death-test.cc ...
Defines:
Undefines:
Includes:
Platform:win64
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-death-test.cc: GTEST_EXTRA_DEATH_TEST_COMMAND_LINE_ARGS_;GTEST_HAS_DEATH_TEST...
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-death-test.cc: GTEST_HAS_CLONE;GTEST_HAS_DEATH_TEST...
        <error id="redundantAssignment" severity="style" msg="Variable &apos;child_pid&apos; is reassigned a value before the old one has been used." verbose="Variable &apos;child_pid&apos; is reassigned a value before the old one has been used." cwe="563" file0="D:/hust-2025-cpp-task/zhengmaoyang/week02/homework/test/googletest/googletest/src/gtest-death-test.cc">
            <location file="D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-death-test.cc" line="1369" column="30" info="child_pid is overwritten"/>
            <location file="D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-death-test.cc" line="1361" column="15" info="child_pid is assigned"/>
            <symbol>child_pid</symbol>
        </error>
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-death-test.cc: GTEST_HAS_DEATH_TEST...
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-death-test.cc: GTEST_HAS_DEATH_TEST;GTEST_KILLED_BY_SIGNAL_OVERRIDE_;GTEST_OS_FUCHSIA=0;GTEST_OS_WINDOWS=0...
        <error id="uninitvar" severity="error" msg="Uninitialized variable: &amp;result" verbose="Uninitialized variable: &amp;result" cwe="457" file0="D:/hust-2025-cpp-task/zhengmaoyang/week02/homework/test/googletest/googletest/src/gtest-death-test.cc">
            <location file="D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-death-test.cc" line="192" column="64"/>
            <symbol>&amp;result</symbol>
        </error>
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-death-test.cc: GTEST_HAS_DEATH_TEST;GTEST_OS_FUCHSIA...
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-death-test.cc: GTEST_HAS_DEATH_TEST;GTEST_OS_FUCHSIA=0;GTEST_OS_WINDOWS=0...
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-death-test.cc: GTEST_HAS_DEATH_TEST;GTEST_OS_LINUX...
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-death-test.cc: GTEST_HAS_DEATH_TEST;GTEST_OS_MAC...
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-death-test.cc: GTEST_HAS_DEATH_TEST;GTEST_OS_QNX...
        <error id="unusedStructMember" severity="style" msg="struct member &apos;ExecDeathTestArgs::close_fd&apos; is never used." verbose="struct member &apos;ExecDeathTestArgs::close_fd&apos; is never used." cwe="563" file0="D:/hust-2025-cpp-task/zhengmaoyang/week02/homework/test/googletest/googletest/src/gtest-death-test.cc">
            <location file="D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-death-test.cc" line="1208" column="7"/>
            <symbol>ExecDeathTestArgs::close_fd</symbol>
        </error>
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-death-test.cc: GTEST_HAS_DEATH_TEST;GTEST_OS_WINDOWS...
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-death-test.cc: GTEST_HAS_DEATH_TEST;WCOREDUMP...
72/88 files checked 47% done
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-filepath.cc ...
Defines:
Undefines:
Includes:
Platform:win64
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-filepath.cc: GTEST_HAS_ALT_PATH_SEP_...
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-filepath.cc: GTEST_OS_NACL...
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-filepath.cc: GTEST_OS_WINDOWS...
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-filepath.cc: GTEST_OS_WINDOWS;GTEST_OS_WINDOWS_MOBILE...
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-filepath.cc: GTEST_OS_WINDOWS_MOBILE...
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-filepath.cc: PATH_MAX...
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-filepath.cc: _XOPEN_PATH_MAX...
73/88 files checked 49% done
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-matchers.cc ...
Defines:
Undefines:
Includes:
Platform:win64
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-matchers.cc: GTEST_INTERNAL_HAS_STRING_VIEW...
74/88 files checked 49% done
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-port.cc ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If GTEST_DISABLE_MSC_DEPRECATED_PUSH_ is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If GTEST_DISABLE_MSC_DEPRECATED_PUSH_ is a macro then please configure it." file0="D:/hust-2025-cpp-task/zhengmaoyang/week02/homework/test/googletest/googletest/src/gtest-port.cc">
            <location file="D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-port.cc" line="1029" column="1"/>
        </error>
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-port.cc: GTEST_GET_BOOL_FROM_ENV_...
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-port.cc: GTEST_GET_INT32_FROM_ENV_...
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-port.cc: GTEST_GET_STRING_FROM_ENV_...
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-port.cc: GTEST_HAS_DEATH_TEST...
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-port.cc: GTEST_HAS_STREAM_REDIRECTION...
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If GTEST_DISABLE_MSC_DEPRECATED_POP_ is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If GTEST_DISABLE_MSC_DEPRECATED_POP_ is a macro then please configure it." file0="D:/hust-2025-cpp-task/zhengmaoyang/week02/homework/test/googletest/googletest/src/gtest-port.cc">
            <location file="D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-port.cc" line="1146" column="1"/>
        </error>
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-port.cc: GTEST_HAS_STREAM_REDIRECTION;GTEST_OS_IOS...
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-port.cc: GTEST_HAS_STREAM_REDIRECTION;GTEST_OS_LINUX_ANDROID...
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-port.cc: GTEST_HAS_STREAM_REDIRECTION;GTEST_OS_WINDOWS...
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-port.cc: GTEST_HAS_STREAM_REDIRECTION;_MSC_VER;__BORLANDC__...
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-port.cc: GTEST_OS_AIX...
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-port.cc: GTEST_OS_DRAGONFLY...
75/88 files checked 56% done
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-printers.cc ...
Defines:
Undefines:
Includes:
Platform:win64
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-printers.cc: GTEST_HAS_STD_WSTRING...
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-printers.cc: _MSC_VER;_NATIVE_WCHAR_T_DEFINED...
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-printers.cc: __SIZEOF_INT128__...
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-printers.cc: __cpp_char8_t...
76/88 files checked 58% done
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-test-part.cc ...
Defines:
Undefines:
Includes:
Platform:win64
77/88 files checked 59% done
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest-typed-test.cc ...
Defines:
Undefines:
Includes:
Platform:win64
78/88 files checked 59% done
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest.cc ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If GTEST_ATTRIBUTE_PRINTF_ is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If GTEST_ATTRIBUTE_PRINTF_ is a macro then please configure it." file0="D:/hust-2025-cpp-task/zhengmaoyang/week02/homework/test/googletest/googletest/src/gtest.cc">
            <location file="D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest.cc" line="3276" column="1"/>
        </error>
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest.cc: GTEST_CAN_STREAM_RESULTS_...
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest.cc: GTEST_CUSTOM_GET_ARGVS_...
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest.cc: GTEST_CUSTOM_INIT_GOOGLE_TEST_FUNCTION_...
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest.cc: GTEST_CUSTOM_TEMPDIR_FUNCTION_...
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest.cc: GTEST_CUSTOM_TEST_EVENT_LISTENER_...
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest.cc: GTEST_EXTRA_DEATH_TEST_CHILD_SETUP_;GTEST_HAS_DEATH_TEST...
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest.cc: GTEST_FOR_GOOGLE_...
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest.cc: GTEST_HAS_ABSL...
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest.cc: GTEST_HAS_DEATH_TEST...
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest.cc: GTEST_HAS_EXCEPTIONS...
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest.cc: GTEST_HAS_SEH...
79/88 files checked 95% done
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest_main.cc ...
Defines:
Undefines:
Includes:
Platform:win64
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\googletest\googletest\src\gtest_main.cc: GTEST_OS_ESP8266...
80/88 files checked 95% done
Checking D:\hust-2025-cpp-task\zhengmaoyang\week02\homework\test\test.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
81/88 files checked 96% done
Checking D:\hust-2025-cpp-task\zhengshitao\week02\homework\My_KVector.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;kvector &lt; Node &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;kvector &lt; Node &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/zhengshitao/week02/homework/My_KVector.cpp">
            <location file="D:\hust-2025-cpp-task\zhengshitao\week02\homework\Kvector.h" line="118" column="3"/>
            <symbol>kvector &lt; Node &gt;</symbol>
        </error>
        <error id="noOperatorEq" severity="warning" msg="Class &apos;kvector &lt; Node &gt;&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;kvector &lt; Node &gt;&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/zhengshitao/week02/homework/My_KVector.cpp">
            <location file="D:\hust-2025-cpp-task\zhengshitao\week02\homework\Kvector.h" line="118" column="3"/>
            <symbol>kvector &lt; Node &gt;</symbol>
        </error>
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;kvector &lt; int &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;kvector &lt; int &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/zhengshitao/week02/homework/My_KVector.cpp">
            <location file="D:\hust-2025-cpp-task\zhengshitao\week02\homework\Kvector.h" line="118" column="3"/>
            <symbol>kvector &lt; int &gt;</symbol>
        </error>
        <error id="noOperatorEq" severity="warning" msg="Class &apos;kvector &lt; int &gt;&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;kvector &lt; int &gt;&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/zhengshitao/week02/homework/My_KVector.cpp">
            <location file="D:\hust-2025-cpp-task\zhengshitao\week02\homework\Kvector.h" line="118" column="3"/>
            <symbol>kvector &lt; int &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;kvector &lt; Node &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;kvector &lt; Node &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/zhengshitao/week02/homework/My_KVector.cpp">
            <location file="D:\hust-2025-cpp-task\zhengshitao\week02\homework\Kvector.h" line="13" column="2"/>
            <symbol>kvector &lt; Node &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;kvector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;kvector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/zhengshitao/week02/homework/My_KVector.cpp">
            <location file="D:\hust-2025-cpp-task\zhengshitao\week02\homework\Kvector.h" line="13" column="2"/>
            <symbol>kvector &lt; int &gt;</symbol>
        </error>
        <error id="constParameterReference" severity="style" msg="Parameter &apos;item&apos; can be declared as reference to const" verbose="Parameter &apos;item&apos; can be declared as reference to const" cwe="398" file0="D:/hust-2025-cpp-task/zhengshitao/week02/homework/My_KVector.cpp">
            <location file="D:\hust-2025-cpp-task\zhengshitao\week02\homework\Kvector.h" line="115" column="34" info="Parameter &apos;item&apos; can be declared as reference to const"/>
            <symbol>item</symbol>
        </error>
82/88 files checked 97% done
Checking D:\hust-2025-cpp-task\zhengshitao\week02\homework\Node.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="useInitializationList" severity="performance" msg="Variable &apos;name&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;name&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="D:/hust-2025-cpp-task/zhengshitao/week02/homework/Node.cpp">
            <location file="D:\hust-2025-cpp-task\zhengshitao\week02\homework\Node.cpp" line="6" column="5"/>
            <symbol>name</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;name&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;name&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="D:/hust-2025-cpp-task/zhengshitao/week02/homework/Node.cpp">
            <location file="D:\hust-2025-cpp-task\zhengshitao\week02\homework\Node.cpp" line="22" column="5"/>
            <symbol>name</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;name&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;name&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="D:/hust-2025-cpp-task/zhengshitao/week02/homework/Node.cpp">
            <location file="D:\hust-2025-cpp-task\zhengshitao\week02\homework\Node.cpp" line="32" column="5"/>
            <symbol>name</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;name&apos; should be passed by const reference." verbose="Parameter &apos;name&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="D:/hust-2025-cpp-task/zhengshitao/week02/homework/Node.cpp">
            <location file="D:\hust-2025-cpp-task\zhengshitao\week02\homework\Node.cpp" line="12" column="24"/>
            <symbol>name</symbol>
        </error>
83/88 files checked 97% done
Checking D:\hust-2025-cpp-task\zhongchenrui\week02\homework\week02_test.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;KVector &lt; int &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;KVector &lt; int &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/zhongchenrui/week02/homework/week02_test.cpp">
            <location file="D:\hust-2025-cpp-task\zhongchenrui\week02\homework\week02.h" line="80" column="13"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="noOperatorEq" severity="warning" msg="Class &apos;KVector &lt; int &gt;&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;KVector &lt; int &gt;&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/zhongchenrui/week02/homework/week02_test.cpp">
            <location file="D:\hust-2025-cpp-task\zhongchenrui\week02\homework\week02.h" line="80" column="13"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/zhongchenrui/week02/homework/week02_test.cpp">
            <location file="D:\hust-2025-cpp-task\zhongchenrui\week02\homework\week02.h" line="44" column="5"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;c&apos; is assigned a value that is never used." verbose="Variable &apos;c&apos; is assigned a value that is never used." cwe="563" file0="D:/hust-2025-cpp-task/zhongchenrui/week02/homework/week02_test.cpp">
            <location file="D:\hust-2025-cpp-task\zhongchenrui\week02\homework\week02_test.cpp" line="16" column="11"/>
            <symbol>c</symbol>
        </error>
84/88 files checked 97% done
Checking D:\hust-2025-cpp-task\zhuhaoran\week02\homework\Project1\Project1\FileName.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;KVector &lt; int &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;KVector &lt; int &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/zhuhaoran/week02/homework/Project1/Project1/FileName.cpp">
            <location file="D:\hust-2025-cpp-task\zhuhaoran\week02\homework\Project1\Project1\FileName.cpp" line="23" column="9"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="noOperatorEq" severity="warning" msg="Class &apos;KVector &lt; int &gt;&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;KVector &lt; int &gt;&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/zhuhaoran/week02/homework/Project1/Project1/FileName.cpp">
            <location file="D:\hust-2025-cpp-task\zhuhaoran\week02\homework\Project1\Project1\FileName.cpp" line="23" column="9"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;KVector &lt; int &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/zhuhaoran/week02/homework/Project1/Project1/FileName.cpp">
            <location file="D:\hust-2025-cpp-task\zhuhaoran\week02\homework\Project1\Project1\FileName.cpp" line="17" column="5"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;index&apos; is less than zero." verbose="The unsigned expression &apos;index&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="D:/hust-2025-cpp-task/zhuhaoran/week02/homework/Project1/Project1/FileName.cpp">
            <location file="D:\hust-2025-cpp-task\zhuhaoran\week02\homework\Project1\Project1\FileName.cpp" line="57" column="19" info="Unsigned less than zero"/>
            <symbol>index</symbol>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;index&apos; is less than zero." verbose="The unsigned expression &apos;index&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="D:/hust-2025-cpp-task/zhuhaoran/week02/homework/Project1/Project1/FileName.cpp">
            <location file="D:\hust-2025-cpp-task\zhuhaoran\week02\homework\Project1\Project1\FileName.cpp" line="80" column="19" info="Unsigned less than zero"/>
            <symbol>index</symbol>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;index&apos; is less than zero." verbose="The unsigned expression &apos;index&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="D:/hust-2025-cpp-task/zhuhaoran/week02/homework/Project1/Project1/FileName.cpp">
            <location file="D:\hust-2025-cpp-task\zhuhaoran\week02\homework\Project1\Project1\FileName.cpp" line="93" column="19" info="Unsigned less than zero"/>
            <symbol>index</symbol>
        </error>
85/88 files checked 98% done
Checking D:\hust-2025-cpp-task\zhukejun\week02\homework\Task2\Task2\test_kvector.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;KVector &lt; int &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;KVector &lt; int &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/zhukejun/week02/homework/Task2/Task2/test_kvector.cpp">
            <location file="D:\hust-2025-cpp-task\zhukejun\week02\homework\Task2\Task2\kvector.h" line="22" column="9"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;KVector &lt; char &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;KVector &lt; char &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/zhukejun/week02/homework/Task2/Task2/test_kvector.cpp">
            <location file="D:\hust-2025-cpp-task\zhukejun\week02\homework\Task2\Task2\kvector.h" line="22" column="9"/>
            <symbol>KVector &lt; char &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;Iterator&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;Iterator&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/zhukejun/week02/homework/Task2/Task2/test_kvector.cpp">
            <location file="D:\hust-2025-cpp-task\zhukejun\week02\homework\Task2\Task2\kvector.h" line="116" column="9"/>
            <symbol>Iterator</symbol>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::accumulate algorithm instead of a raw loop." verbose="Consider using std::accumulate algorithm instead of a raw loop." cwe="398" file0="D:/hust-2025-cpp-task/zhukejun/week02/homework/Task2/Task2/test_kvector.cpp">
            <location file="D:\hust-2025-cpp-task\zhukejun\week02\homework\Task2\Task2\test_kvector.cpp" line="62" column="13"/>
        </error>
86/88 files checked 98% done
Checking D:\hust-2025-cpp-task\zhuyuelin\week02\homework\001test.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;KVector &lt; int &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;KVector &lt; int &gt;&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398" file0="D:/hust-2025-cpp-task/zhuyuelin/week02/homework/001test.cpp">
            <location file="D:\hust-2025-cpp-task\zhuyuelin\week02\homework\001test.cpp" line="12" column="66"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;Iterator&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;Iterator&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="D:/hust-2025-cpp-task/zhuyuelin/week02/homework/001test.cpp">
            <location file="D:\hust-2025-cpp-task\zhuyuelin\week02\homework\001test.cpp" line="113" column="7"/>
            <symbol>Iterator</symbol>
        </error>
87/88 files checked 99% done
Checking D:\hust-2025-cpp-task\zuopengwei\week02\homework\test.cpp ...
Defines:
Undefines:
Includes:
Platform:win64
        <error id="operatorEqToSelf" severity="warning" msg="&apos;operator=&apos; should check for assignment to self to avoid problems with dynamic memory." verbose="&apos;operator=&apos; should check for assignment to self to ensure that each block of dynamically allocated memory is owned and managed by only one instance of the class." cwe="398" file0="D:/hust-2025-cpp-task/zuopengwei/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\zuopengwei\week02\homework\KVector.hpp" line="418" column="17"/>
        </error>
        <error id="throwInNoexceptFunction" severity="error" msg="Exception thrown in function declared not to throw exceptions." verbose="Exception thrown in function declared not to throw exceptions." cwe="398" file0="D:/hust-2025-cpp-task/zuopengwei/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\zuopengwei\week02\homework\KVector.hpp" line="274" column="9"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="portability" msg="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;size_t {aka unsigned long long}&apos;." verbose="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;size_t {aka unsigned long long}&apos;." cwe="686" file0="D:/hust-2025-cpp-task/zuopengwei/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\zuopengwei\week02\homework\test.cpp" line="26" column="9"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%zd in format string (no. 1) requires &apos;ssize_t&apos; but the argument type is &apos;signed int&apos;." verbose="%zd in format string (no. 1) requires &apos;ssize_t&apos; but the argument type is &apos;signed int&apos;." cwe="686" file0="D:/hust-2025-cpp-task/zuopengwei/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\zuopengwei\week02\homework\test.cpp" line="32" column="9"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%zd in format string (no. 3) requires &apos;ssize_t&apos; but the argument type is &apos;signed int&apos;." verbose="%zd in format string (no. 3) requires &apos;ssize_t&apos; but the argument type is &apos;signed int&apos;." cwe="686" file0="D:/hust-2025-cpp-task/zuopengwei/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\zuopengwei\week02\homework\test.cpp" line="32" column="9"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="portability" msg="%d in format string (no. 5) requires &apos;int&apos; but the argument type is &apos;size_t {aka unsigned long long}&apos;." verbose="%d in format string (no. 5) requires &apos;int&apos; but the argument type is &apos;size_t {aka unsigned long long}&apos;." cwe="686" file0="D:/hust-2025-cpp-task/zuopengwei/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\zuopengwei\week02\homework\test.cpp" line="32" column="9"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="portability" msg="%zd in format string (no. 1) requires &apos;ssize_t&apos; but the argument type is &apos;size_t {aka unsigned long long}&apos;." verbose="%zd in format string (no. 1) requires &apos;ssize_t&apos; but the argument type is &apos;size_t {aka unsigned long long}&apos;." cwe="686" file0="D:/hust-2025-cpp-task/zuopengwei/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\zuopengwei\week02\homework\test.cpp" line="36" column="5"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="portability" msg="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;size_t {aka unsigned long long}&apos;." verbose="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;size_t {aka unsigned long long}&apos;." cwe="686" file0="D:/hust-2025-cpp-task/zuopengwei/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\zuopengwei\week02\homework\test.cpp" line="54" column="9"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="portability" msg="%zd in format string (no. 1) requires &apos;ssize_t&apos; but the argument type is &apos;ptrdiff_t {aka signed int}&apos;." verbose="%zd in format string (no. 1) requires &apos;ssize_t&apos; but the argument type is &apos;ptrdiff_t {aka signed int}&apos;." cwe="686" file0="D:/hust-2025-cpp-task/zuopengwei/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\zuopengwei\week02\homework\test.cpp" line="60" column="9"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="portability" msg="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;size_t {aka unsigned long long}&apos;." verbose="%d in format string (no. 3) requires &apos;int&apos; but the argument type is &apos;size_t {aka unsigned long long}&apos;." cwe="686" file0="D:/hust-2025-cpp-task/zuopengwei/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\zuopengwei\week02\homework\test.cpp" line="60" column="9"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="portability" msg="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;size_t {aka unsigned long long}&apos;." verbose="%d in format string (no. 1) requires &apos;int&apos; but the argument type is &apos;size_t {aka unsigned long long}&apos;." cwe="686" file0="D:/hust-2025-cpp-task/zuopengwei/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\zuopengwei\week02\homework\KVector.hpp" line="306" column="9"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="portability" msg="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;size_t {aka unsigned long long}&apos;." verbose="%d in format string (no. 2) requires &apos;int&apos; but the argument type is &apos;size_t {aka unsigned long long}&apos;." cwe="686" file0="D:/hust-2025-cpp-task/zuopengwei/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\zuopengwei\week02\homework\KVector.hpp" line="306" column="9"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="D:/hust-2025-cpp-task/zuopengwei/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\zuopengwei\week02\homework\KVector.hpp" line="43" column="22"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="D:/hust-2025-cpp-task/zuopengwei/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\zuopengwei\week02\homework\KVector.hpp" line="146" column="13"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="D:/hust-2025-cpp-task/zuopengwei/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\zuopengwei\week02\homework\KVector.hpp" line="151" column="13"/>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;ptr&apos; can be declared as pointer to const" verbose="Parameter &apos;ptr&apos; can be declared as pointer to const" cwe="398" file0="D:/hust-2025-cpp-task/zuopengwei/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\zuopengwei\week02\homework\KVector.hpp" line="62" column="28" info="Parameter &apos;ptr&apos; can be declared as pointer to const"/>
            <symbol>ptr</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="D:/hust-2025-cpp-task/zuopengwei/week02/homework/test.cpp">
            <location file="D:\hust-2025-cpp-task\zuopengwei\week02\homework\test.cpp" line="53" column="86"/>
        </error>
88/88 files checked 100% done
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;Kvector &lt; int &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;Kvector &lt; int &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Kvector_new\Kvector_new\Kvector_ptr.h" line="7" column="1"/>
            <location file="D:\hust-2025-cpp-task\cuihaoyi\week02\homework\Week2_Prj\Kvector.h" line="7" column="1"/>
            <symbol>Kvector &lt; int &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int , std :: allocator &lt; int &gt; &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int , std :: allocator &lt; int &gt; &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\ayiziba\week02\homework\KVector.h" line="33" column="1"/>
            <location file="D:\hust-2025-cpp-task\dengzihan\week02\homework\KVector.cpp" line="43" column="1"/>
            <symbol>KVector &lt; int , std :: allocator &lt; int &gt; &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\fengguixin\week02\homework\MyVector类模板设计\MyVector类模板设计\myvector.h" line="7" column="1"/>
            <location file="D:\hust-2025-cpp-task\guanyuhao\week02\homework\KVector\KVector.cpp" line="8" column="1"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\fengguixin\week02\homework\MyVector类模板设计\MyVector类模板设计\myvector.h" line="7" column="1"/>
            <location file="D:\hust-2025-cpp-task\gujianan\week02\homework\Vector.h" line="5" column="1"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\fengguixin\week02\homework\MyVector类模板设计\MyVector类模板设计\myvector.h" line="7" column="1"/>
            <location file="D:\hust-2025-cpp-task\guoyongxiang\week02\homework\KVector\head\KVector.h" line="5" column="1"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\fengguixin\week02\homework\MyVector类模板设计\MyVector类模板设计\myvector.h" line="7" column="1"/>
            <location file="D:\hust-2025-cpp-task\hewenxuan\week02\homework\KVector.h" line="5" column="1"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;::iterator&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;::iterator&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\guanyuhao\week02\homework\KVector\KVector.cpp" line="145" column="2"/>
            <location file="D:\hust-2025-cpp-task\hewenxuan\week02\homework\KVector.h" line="13" column="5"/>
            <symbol>KVector &lt; int &gt;::iterator</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\fengguixin\week02\homework\MyVector类模板设计\MyVector类模板设计\myvector.h" line="7" column="1"/>
            <location file="D:\hust-2025-cpp-task\huangxingyang\week02\homework\kvector.h" line="11" column="1"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;::iterator&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;::iterator&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\guanyuhao\week02\homework\KVector\KVector.cpp" line="145" column="2"/>
            <location file="D:\hust-2025-cpp-task\huangxingyang\week02\homework\kvector.h" line="300" column="5"/>
            <symbol>KVector &lt; int &gt;::iterator</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\fengguixin\week02\homework\MyVector类模板设计\MyVector类模板设计\myvector.h" line="7" column="1"/>
            <location file="D:\hust-2025-cpp-task\lijunlin\week02\homework\hw\hw\KVector.h" line="7" column="1"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\fengguixin\week02\homework\MyVector类模板设计\MyVector类模板设计\myvector.h" line="7" column="1"/>
            <location file="D:\hust-2025-cpp-task\limingyue\week02\homework\KVector\KVector\kVector.h" line="8" column="1"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\fengguixin\week02\homework\MyVector类模板设计\MyVector类模板设计\myvector.h" line="7" column="1"/>
            <location file="D:\hust-2025-cpp-task\lishiyu2\week02\homework\KVector.h" line="9" column="1"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\fengguixin\week02\homework\MyVector类模板设计\MyVector类模板设计\myvector.h" line="7" column="1"/>
            <location file="D:\hust-2025-cpp-task\liucanmin\week02\homework\KVector\KVector.cpp" line="12" column="1"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\fengguixin\week02\homework\MyVector类模板设计\MyVector类模板设计\myvector.h" line="7" column="1"/>
            <location file="D:\hust-2025-cpp-task\liuweihao\week02\homework\test.cpp" line="6" column="1"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\fengguixin\week02\homework\MyVector类模板设计\MyVector类模板设计\myvector.h" line="7" column="1"/>
            <location file="D:\hust-2025-cpp-task\liuya\week02\homework\demo.cpp" line="5" column="1"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\fengguixin\week02\homework\MyVector类模板设计\MyVector类模板设计\myvector.h" line="7" column="1"/>
            <location file="D:\hust-2025-cpp-task\liuzhigang\week02\homework\KVector\KVector.h" line="7" column="1"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;::iterator&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;::iterator&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\guanyuhao\week02\homework\KVector\KVector.cpp" line="145" column="2"/>
            <location file="D:\hust-2025-cpp-task\liuzhigang\week02\homework\KVector\KVector.h" line="19" column="5"/>
            <symbol>KVector &lt; int &gt;::iterator</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\fengguixin\week02\homework\MyVector类模板设计\MyVector类模板设计\myvector.h" line="7" column="1"/>
            <location file="D:\hust-2025-cpp-task\lizhuolong\week02\homework\Work_KVector\main.cpp" line="6" column="1"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;::Iterator&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;::Iterator&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\liuya\week02\homework\demo.cpp" line="101" column="5"/>
            <location file="D:\hust-2025-cpp-task\lizhuolong\week02\homework\Work_KVector\main.cpp" line="123" column="5"/>
            <symbol>KVector &lt; int &gt;::Iterator</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; std :: string &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; std :: string &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\liuweihao\week02\homework\test.cpp" line="6" column="1"/>
            <location file="D:\hust-2025-cpp-task\lizhuolong\week02\homework\Work_KVector\main.cpp" line="6" column="1"/>
            <symbol>KVector &lt; std :: string &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\fengguixin\week02\homework\MyVector类模板设计\MyVector类模板设计\myvector.h" line="7" column="1"/>
            <location file="D:\hust-2025-cpp-task\mengxingyu\week02\homework\jinshan_hmwk01.cpp" line="6" column="1"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;::iterator&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;::iterator&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\guanyuhao\week02\homework\KVector\KVector.cpp" line="145" column="2"/>
            <location file="D:\hust-2025-cpp-task\mengxingyu\week02\homework\jinshan_hmwk01.cpp" line="116" column="5"/>
            <symbol>KVector &lt; int &gt;::iterator</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; std :: string &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; std :: string &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\liuweihao\week02\homework\test.cpp" line="6" column="1"/>
            <location file="D:\hust-2025-cpp-task\mengxingyu\week02\homework\jinshan_hmwk01.cpp" line="6" column="1"/>
            <symbol>KVector &lt; std :: string &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\fengguixin\week02\homework\MyVector类模板设计\MyVector类模板设计\myvector.h" line="7" column="1"/>
            <location file="D:\hust-2025-cpp-task\niezhihe\week02\homework\kvector.h" line="9" column="1"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;::Iterator&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;::Iterator&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\liuya\week02\homework\demo.cpp" line="101" column="5"/>
            <location file="D:\hust-2025-cpp-task\niezhihe\week02\homework\kvector.h" line="128" column="2"/>
            <symbol>KVector &lt; int &gt;::Iterator</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; std :: string &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; std :: string &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\liuweihao\week02\homework\test.cpp" line="6" column="1"/>
            <location file="D:\hust-2025-cpp-task\niezhihe\week02\homework\kvector.h" line="9" column="1"/>
            <symbol>KVector &lt; std :: string &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; std :: string &gt;::Iterator&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; std :: string &gt;::Iterator&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\lizhuolong\week02\homework\Work_KVector\main.cpp" line="123" column="5"/>
            <location file="D:\hust-2025-cpp-task\niezhihe\week02\homework\kvector.h" line="128" column="2"/>
            <symbol>KVector &lt; std :: string &gt;::Iterator</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\fengguixin\week02\homework\MyVector类模板设计\MyVector类模板设计\myvector.h" line="7" column="1"/>
            <location file="D:\hust-2025-cpp-task\qiuhaichao\week02\homework\Project1\源.cpp" line="6" column="1"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;::Iterator&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;::Iterator&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\liuya\week02\homework\demo.cpp" line="101" column="5"/>
            <location file="D:\hust-2025-cpp-task\qiuhaichao\week02\homework\Project1\源.cpp" line="101" column="9"/>
            <symbol>KVector &lt; int &gt;::Iterator</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\fengguixin\week02\homework\MyVector类模板设计\MyVector类模板设计\myvector.h" line="7" column="1"/>
            <location file="D:\hust-2025-cpp-task\raozinan\week02\homework\KVector.h" line="8" column="1"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; double &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; double &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\limingyue\week02\homework\KVector\KVector\kVector.h" line="8" column="1"/>
            <location file="D:\hust-2025-cpp-task\raozinan\week02\homework\KVector.h" line="8" column="1"/>
            <symbol>KVector &lt; double &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\fengguixin\week02\homework\MyVector类模板设计\MyVector类模板设计\myvector.h" line="7" column="1"/>
            <location file="D:\hust-2025-cpp-task\rensiyi\week02\homework\kvector.h" line="24" column="1"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;::Iterator&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;::Iterator&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\liuya\week02\homework\demo.cpp" line="101" column="5"/>
            <location file="D:\hust-2025-cpp-task\rensiyi\week02\homework\kvector.h" line="168" column="5"/>
            <symbol>KVector &lt; int &gt;::Iterator</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\fengguixin\week02\homework\MyVector类模板设计\MyVector类模板设计\myvector.h" line="7" column="1"/>
            <location file="D:\hust-2025-cpp-task\tanfeipeng\week02\homework\week2\vector1.cpp" line="4" column="1"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\fengguixin\week02\homework\MyVector类模板设计\MyVector类模板设计\myvector.h" line="7" column="1"/>
            <location file="D:\hust-2025-cpp-task\tangjianhua\week02\homework\KVector.hpp" line="6" column="1"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\fengguixin\week02\homework\MyVector类模板设计\MyVector类模板设计\myvector.h" line="7" column="1"/>
            <location file="D:\hust-2025-cpp-task\tianweiye\week02\homework\kvector\kvector.h" line="3" column="1"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;::iterator&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;::iterator&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\guanyuhao\week02\homework\KVector\KVector.cpp" line="145" column="2"/>
            <location file="D:\hust-2025-cpp-task\tianweiye\week02\homework\kvector\kvector.h" line="165" column="5"/>
            <symbol>KVector &lt; int &gt;::iterator</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; std :: string &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; std :: string &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\liuweihao\week02\homework\test.cpp" line="6" column="1"/>
            <location file="D:\hust-2025-cpp-task\tianweiye\week02\homework\kvector\kvector.h" line="3" column="1"/>
            <symbol>KVector &lt; std :: string &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; std :: string &gt;::iterator&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; std :: string &gt;::iterator&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\mengxingyu\week02\homework\jinshan_hmwk01.cpp" line="116" column="5"/>
            <location file="D:\hust-2025-cpp-task\tianweiye\week02\homework\kvector\kvector.h" line="165" column="5"/>
            <symbol>KVector &lt; std :: string &gt;::iterator</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\fengguixin\week02\homework\MyVector类模板设计\MyVector类模板设计\myvector.h" line="7" column="1"/>
            <location file="D:\hust-2025-cpp-task\tuyanchen\week02\homework\week02.cpp" line="6" column="1"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;::Iterator&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;::Iterator&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\liuya\week02\homework\demo.cpp" line="101" column="5"/>
            <location file="D:\hust-2025-cpp-task\tuyanchen\week02\homework\week02.cpp" line="142" column="2"/>
            <symbol>KVector &lt; int &gt;::Iterator</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;::iterator&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;::iterator&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\guanyuhao\week02\homework\KVector\KVector.cpp" line="145" column="2"/>
            <location file="D:\hust-2025-cpp-task\wanganmin\week02\homework\KVector.cpp" line="167" column="5"/>
            <symbol>KVector &lt; int &gt;::iterator</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; std :: string &gt;::iterator&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; std :: string &gt;::iterator&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\mengxingyu\week02\homework\jinshan_hmwk01.cpp" line="116" column="5"/>
            <location file="D:\hust-2025-cpp-task\wanganmin\week02\homework\KVector.cpp" line="167" column="5"/>
            <symbol>KVector &lt; std :: string &gt;::iterator</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\fengguixin\week02\homework\MyVector类模板设计\MyVector类模板设计\myvector.h" line="7" column="1"/>
            <location file="D:\hust-2025-cpp-task\wangaoze\week02\homework\homework1\KVector.h" line="6" column="1"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\fengguixin\week02\homework\MyVector类模板设计\MyVector类模板设计\myvector.h" line="7" column="1"/>
            <location file="D:\hust-2025-cpp-task\wangcungang\week02\homework\Kvector\Kvector\Vector.cpp" line="5" column="1"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\fengguixin\week02\homework\MyVector类模板设计\MyVector类模板设计\myvector.h" line="7" column="1"/>
            <location file="D:\hust-2025-cpp-task\wangziyang\week02\homework\KVector\KVector\KVector.h" line="8" column="1"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\fengguixin\week02\homework\MyVector类模板设计\MyVector类模板设计\myvector.h" line="7" column="1"/>
            <location file="D:\hust-2025-cpp-task\wangziyang\week02\homework\KVector_old\KVector\KVector.h" line="6" column="1"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\fengguixin\week02\homework\MyVector类模板设计\MyVector类模板设计\myvector.h" line="7" column="1"/>
            <location file="D:\hust-2025-cpp-task\wenlin\week02\homework\KVector\KVector.h" line="11" column="1"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\fengguixin\week02\homework\MyVector类模板设计\MyVector类模板设计\myvector.h" line="7" column="1"/>
            <location file="D:\hust-2025-cpp-task\yangxiangyu\week02\homework\KVector.h" line="117" column="1"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\fengguixin\week02\homework\MyVector类模板设计\MyVector类模板设计\myvector.h" line="7" column="1"/>
            <location file="D:\hust-2025-cpp-task\yukuai\week02\homework\Homework\KVector\kvector_decl.h" line="11" column="1"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVectorIterator &lt; int &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVectorIterator &lt; int &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\dengzihan\week02\homework\KVector.cpp" line="7" column="1"/>
            <location file="D:\hust-2025-cpp-task\yukuai\week02\homework\Homework\KVector\kvector_iterator.h" line="7" column="1"/>
            <symbol>KVectorIterator &lt; int &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\fengguixin\week02\homework\MyVector类模板设计\MyVector类模板设计\myvector.h" line="7" column="1"/>
            <location file="D:\hust-2025-cpp-task\yukuai\week02\homework\Homework\KVector_2\kvector_decl.h" line="11" column="1"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVectorIterator &lt; int &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVectorIterator &lt; int &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\dengzihan\week02\homework\KVector.cpp" line="7" column="1"/>
            <location file="D:\hust-2025-cpp-task\yukuai\week02\homework\Homework\KVector_2\kvector_iterator.h" line="8" column="1"/>
            <symbol>KVectorIterator &lt; int &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; char &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; char &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\hewenxuan\week02\homework\KVector.h" line="5" column="1"/>
            <location file="D:\hust-2025-cpp-task\zhangjincheng2\week02\homework\KVector.h" line="6" column="1"/>
            <symbol>KVector &lt; char &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;kvector &lt; int &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;kvector &lt; int &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\liushaoxin\week02\homework\KVector\KVector.cpp" line="8" column="1"/>
            <location file="D:\hust-2025-cpp-task\zhengshitao\week02\homework\Kvector.h" line="7" column="1"/>
            <symbol>kvector &lt; int &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\fengguixin\week02\homework\MyVector类模板设计\MyVector类模板设计\myvector.h" line="7" column="1"/>
            <location file="D:\hust-2025-cpp-task\zhongchenrui\week02\homework\week02.h" line="10" column="1"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\fengguixin\week02\homework\MyVector类模板设计\MyVector类模板设计\myvector.h" line="7" column="1"/>
            <location file="D:\hust-2025-cpp-task\zhuhaoran\week02\homework\Project1\Project1\FileName.cpp" line="4" column="1"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\fengguixin\week02\homework\MyVector类模板设计\MyVector类模板设计\myvector.h" line="7" column="1"/>
            <location file="D:\hust-2025-cpp-task\zhukejun\week02\homework\Task2\Task2\kvector.h" line="5" column="1"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;::Iterator&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;::Iterator&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\liuya\week02\homework\demo.cpp" line="101" column="5"/>
            <location file="D:\hust-2025-cpp-task\zhukejun\week02\homework\Task2\Task2\kvector.h" line="111" column="5"/>
            <symbol>KVector &lt; int &gt;::Iterator</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; char &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; char &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\hewenxuan\week02\homework\KVector.h" line="5" column="1"/>
            <location file="D:\hust-2025-cpp-task\zhukejun\week02\homework\Task2\Task2\kvector.h" line="5" column="1"/>
            <symbol>KVector &lt; char &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\fengguixin\week02\homework\MyVector类模板设计\MyVector类模板设计\myvector.h" line="7" column="1"/>
            <location file="D:\hust-2025-cpp-task\zhuyuelin\week02\homework\001test.cpp" line="6" column="1"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;::Iterator&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;::Iterator&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\liuya\week02\homework\demo.cpp" line="101" column="5"/>
            <location file="D:\hust-2025-cpp-task\zhuyuelin\week02\homework\001test.cpp" line="109" column="4"/>
            <symbol>KVector &lt; int &gt;::Iterator</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\fengguixin\week02\homework\MyVector类模板设计\MyVector类模板设计\myvector.h" line="7" column="1"/>
            <location file="D:\hust-2025-cpp-task\zuopengwei\week02\homework\KVector.hpp" line="159" column="1"/>
            <symbol>KVector &lt; int &gt;</symbol>
        </error>
        <error id="ctuOneDefinitionRuleViolation" severity="error" msg="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;::iterator&apos;" verbose="The one definition rule is violated, different classes/structs have the same name &apos;KVector &lt; int &gt;::iterator&apos;" cwe="758">
            <location file="D:\hust-2025-cpp-task\guanyuhao\week02\homework\KVector\KVector.cpp" line="145" column="2"/>
            <location file="D:\hust-2025-cpp-task\zuopengwei\week02\homework\KVector.hpp" line="500" column="5"/>
            <symbol>KVector &lt; int &gt;::iterator</symbol>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 configurations. Use --force to check all configurations. For more details, use --enable=information." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time. For more details, use --enable=information." cwe="398"/>
    </errors>
</results>
Active checkers: There was critical errors (use --checkers-report=<filename> to see details)
